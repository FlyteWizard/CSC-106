{
    "docs": [
        {
            "location": "/", 
            "text": "CSC 106\n\n\nConnex\n\n\n\n\nInstructor\n: Alona Fyshe\n\n\nOffice\n: ECS 618\n\n\nEmail\n: \nafyshe@uvic.ca\n\n\nOffice Hours\n:\n\n\nWednesday, 09:30am to 11:20am \n\n\nOr by appointment\n\n\n\n\n\n\nClassroom\n: David Turpin Building - A120\n\n\n\n\nOverview\n\n\nA general introduction to the field of computer science, its basic areas and its connections to interdisciplinary topics.\n\n\nTextbook\n\n\nThere is no textbook required for this course, but the recommended textbook is: \n\n\n* Invitation to Computer Science (7th edition) by G. Michael Schneider and Judith L. Gersting, Cengage Learning.\n\n\n\nAssessment\n\n\n\n\n\n\n\n\nTask\n\n\nWeight\n\n\n\n\n\n\n\n\n\n\nAssignments\n\n\n40%\n\n\n\n\n\n\nLab Attendance\n\n\n5%\n\n\n\n\n\n\nMidterm Exams (3)\n\n\n55%\n\n\n\n\n\n\n\n\nDue Dates\n\n\nSubject to Change\n\n\n\n\n\n\n\n\nTask\n\n\nWeight\n\n\nDue\n\n\n\n\n\n\n\n\n\n\nAssignment 1\n\n\n10%\n\n\nJan. 24th, 2017\n\n\n\n\n\n\nMidterm Exam 1\n\n\n~19%\n\n\nJan. 31st, 2017\n\n\n\n\n\n\nAssignment 2\n\n\n10%\n\n\nFeb. 10th, 2017\n\n\n\n\n\n\nAssignment 3\n\n\n10%\n\n\nMar. 3rd, 2017\n\n\n\n\n\n\nMidterm Exam 2\n\n\n~19%\n\n\nMar. 7th, 2017\n\n\n\n\n\n\nAssignment 4\n\n\n10%\n\n\nMar. 21st, 2017\n\n\n\n\n\n\nMidterm Exam 3\n\n\n~19%\n\n\nApril 4th, 2017", 
            "title": "Home"
        }, 
        {
            "location": "/#csc-106", 
            "text": "", 
            "title": "CSC 106"
        }, 
        {
            "location": "/#connex", 
            "text": "Instructor : Alona Fyshe  Office : ECS 618  Email :  afyshe@uvic.ca  Office Hours :  Wednesday, 09:30am to 11:20am   Or by appointment    Classroom : David Turpin Building - A120", 
            "title": "Connex"
        }, 
        {
            "location": "/#overview", 
            "text": "A general introduction to the field of computer science, its basic areas and its connections to interdisciplinary topics.", 
            "title": "Overview"
        }, 
        {
            "location": "/#textbook", 
            "text": "There is no textbook required for this course, but the recommended textbook is:   * Invitation to Computer Science (7th edition) by G. Michael Schneider and Judith L. Gersting, Cengage Learning.", 
            "title": "Textbook"
        }, 
        {
            "location": "/#assessment", 
            "text": "Task  Weight      Assignments  40%    Lab Attendance  5%    Midterm Exams (3)  55%", 
            "title": "Assessment"
        }, 
        {
            "location": "/#due-dates", 
            "text": "Subject to Change     Task  Weight  Due      Assignment 1  10%  Jan. 24th, 2017    Midterm Exam 1  ~19%  Jan. 31st, 2017    Assignment 2  10%  Feb. 10th, 2017    Assignment 3  10%  Mar. 3rd, 2017    Midterm Exam 2  ~19%  Mar. 7th, 2017    Assignment 4  10%  Mar. 21st, 2017    Midterm Exam 3  ~19%  April 4th, 2017", 
            "title": "Due Dates"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/", 
            "text": "CSC 106 - Introduction\n\n\nLecture 1 - January 4th, 2017\n\n\nThese notes list the main ideas for this lecture. Please check out Alona Fyshe's slides for more information.\n\n\n\n\n\n\nAbacus (Japanese)\n\n\nWhy should we care about polynomials?\n\n\nAnalytical Engine\n\n\nPunch Cards (Held Instructions)\n\n\nRAM \n\n\nCPU\n\n\n\n\n\n\nTabulate the Census\n\n\nData Punch Cards\n\n\nIBM\n\n\n\n\n\n\nComputers (Who invented the first computer? A lot of people.)\n\n\nBinary \n\n\nConrad Zuse (Standard - Binary)\n\n\nAlan Turing (Crack German Codes - WW2)\n\n\nColossus (Crack German Codes - WW2)\n\n\nENIAC\n\n\nSolid State Transistor (Computers no longer for Gov, also for Business) \n\n\nApple (Bring Computers to Home)\n\n\nMacintosh (Desktop and Folders - Computers no longer just a terminal)", 
            "title": "1 Introduction"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/#csc-106-introduction", 
            "text": "", 
            "title": "CSC 106 - Introduction"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/#lecture-1-january-4th-2017", 
            "text": "These notes list the main ideas for this lecture. Please check out Alona Fyshe's slides for more information.    Abacus (Japanese)  Why should we care about polynomials?  Analytical Engine  Punch Cards (Held Instructions)  RAM   CPU    Tabulate the Census  Data Punch Cards  IBM    Computers (Who invented the first computer? A lot of people.)  Binary   Conrad Zuse (Standard - Binary)  Alan Turing (Crack German Codes - WW2)  Colossus (Crack German Codes - WW2)  ENIAC  Solid State Transistor (Computers no longer for Gov, also for Business)   Apple (Bring Computers to Home)  Macintosh (Desktop and Folders - Computers no longer just a terminal)", 
            "title": "Lecture 1 - January 4th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/", 
            "text": "Databases and Pseudocode\n\n\nLecture 2 - January 6th, 2017\n\n\n\n\nMotivating Example:\n\n\nCSC 106 - Keeping Records of Grades\n\n\nGoal: How to work with this Data\n\n\n\n\n\n\nPseudocode -\n Logic writing on your code.\n\n\nAlgorithm -\n Sets of steps\n\n\n\n\n\n\nTable 1: \n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n101\n\n\nJoe Smith\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n80\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n145\n\n\nAl Green\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n66\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n\n\nSolution For:\n The above question\n\n\ntotal = 0\ncount = 0\ni = 1\n\nwhile i =\n total # rows in table\n    total = total + grade in row i\n    count = count + 1\n    i = i + 1\n\naverage = total / count\n\n\n\n\nSolution For:\n Keeping track of grades for a specific teacher\n\n\ntotal = 0\ncount = 0 \ni = 1\n\nwhile i =\n total # rows in table\n    if prof-name of row i = Turing\n        total = toal + grade in row i\n        count = count + 1\n    i = i + 1\n\naverage = total / count\n\n\n\n\nSolution For:\n Inserting a new grade in the table\n\n\nBefore:\n\n\ni = # rows in table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\ncourse_name for row i = CSC 106 (Too much info)\nCRN for row i = 23456\nprof-name for row i = Turing (Too much info - CRN is all mighty)\ngrade for row i = 91\n\n\n\n\nAfter:\n\n\ni = # rows in grades table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\nCRN for row i = 23456\ngrade for row i = 91\n\n\n\n\n\n\nNOTE:\n The question now has two tables to work with instead of one.\n\n\nTable 1: Courses\n\n\n\n\n\n\n\n\ncourse\n\n\ncrn\n\n\nprof_name\n\n\n\n\n\n\n\n\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n\n\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n\n\n\n\n\n\nTable 2: Grades\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncrn\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n101\n\n\nJoe Smith\n\n\n23456\n\n\n80\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\n23456\n\n\n45\n\n\n\n\n\n\n145\n\n\nAl Green\n\n\n23456\n\n\n66\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\n23457\n\n\n79\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\n23457\n\n\n83\n\n\n\n\n\n\n\n\n\n\nSolution For:\n Calculating the average for students in class with CRN 23457\n\n\ntotal = 0\ncount = 0\ni = 1\n\nwhile i =\n total # of rows in grades tables\n    if crn in row i is 23457\n        total = total + grade in row i\n        count = count + 1\n    i + i + 1\naverage = total / count\n\n\n\n\nSolution For:\n Calculating a better average\n\n\nif  count = 0 \n    average = 0\nelse \n    average = total/count\n\n\n\n\nSolution For:\n Table Case: Inserting a new grade into two tables\n\n\nif input crn is not in classes table \n    return error\nelse \n    stud_id for row i = 313\n    stud_name = Steve Cook\n    crn = 23456\n    grade = 91\n\n\n\n\nSolution For:\n Calculating the average grade for classes that Turing teaches\n\n\ntotal = 0 \ncount = 0\nj = 1 (Index into classes table)\n\nwhile j =\n # rows in classes table \n    if row j of classes tables has prof_name = Turing\n        my_crn = crn in j of classes table\n\n        i = 1\n        while i =\n #rows in grades table\n            if crn for row i of grades table  = my_crn\n                table = total + grade in row i of grades table\n                count = count + 1\n            i = i + 1\n    j = j + 1\n\n\n\n\nLecture 3 - January 10th, 2017\n\n\nTrace Through Code\n\n\nCode:\n\n\nStep1 - total=0\nStep2 - count=0\nStep3 - i=1\nStep4 - while i \n= # rows in table, repeat steps 5 through 8\nStep5 -     if prof_name of row i equals Turing, do line 6 and 7 \nStep6 -         total = total + grade in row i\nStep7 -         count = count + 1\nStep8 -     i=i+1\nStep9 - average = total / count\n\n\n\n\nTable 1:\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n342\n\n\nPatricia Dune\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n94\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n\n\nSolution:\n\n\n#rows = 4\n\ntotal=0\ncount=0\ni=1\n--\ntotal=45\ncount=1\n1=2\n--\ni=3\n--\ntotal=139\ncount=2\ni=4\n--\ni=5\n-- \nAverage = 139/2 = 69.5\n\n\n\n\nWrite pseudocode that calculates the maximum grade for a student in class with crn = 23456\n\n\nTrace Through Code\n\n\nCode:\n\n\nStep1 - max=-1\nStep2 - i=1\nStep3 - while i \n= # rows in table, repeat steps 4 through 7\nStep4 -     if crn of row i equals 23456, do line 5 and 6 \nStep5 -         if max \n grade in row i do line 6\nStep6 -             max = grade in row i \nStep7 -     i=i+1\n\n\n\n\nTable:\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n342\n\n\nPatricia Dune\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n94\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n\n\nSolution:\n \n\n\nmax=-1\ni=1\n--\nmax=45\ni=2\n--\ni=3\n--\nmax=94\ni=4\n--\ni=5\n\n\n\n\nSQL\n\n\nSql is a structured query language.\n\n\nDatabase\n\n\nA database is a collection of tables.\n\n\nInstall SqLite3\n\n\nbrew install sqlite\n\n\n\n\nStart by making a blank table:\n\n\ncreate table grades( stud_id int, stud_name text, course_name text, crn int, prof_name text, grade int);\n\n\n\n\nNote:\n Order of values must match the order of the columns when you created the table.\n\n\nQuery\n\n\nA query is a select statement that tells the computer what columms the result should have. \n\n\nEx.\n\n\nSelect stud_name, grade \nfrom grades;\n\n\n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\nname\n\n\n56\n\n\n\n\n\n\nname\n\n\n78\n\n\n\n\n\n\n\n\nEx. \n\n\nSelect avg(grade)\nFrom grades;\n\n\n\n\nReturns --\n Table 1: Average\n\n\n| \navg(grade)\n |\n| ------------:|\n| 72.8         |\n\n\nEx.\n\n\nselect max(grade)\nfrom grades;\n\n\n\n\nReturns --\n Table 1: Max\n\n\n| \nmax\n |\n| :----:|\n| 94    |\n\n\nEx.\n\n\nSelect stud_name, grade, crn \nfrom grades\nwhere crn = 23456;\n\n\n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\ncrn\n\n\n\n\n\n\n\n\n\n\nJoe Smith\n\n\n80\n\n\n23456\n\n\n\n\n\n\nJohn Jacks\n\n\n45\n\n\n23456\n\n\n\n\n\n\nAl Green\n\n\n66\n\n\n23456\n\n\n\n\n\n\nGreg Black\n\n\n60\n\n\n23456\n\n\n\n\n\n\nPatricia D\n\n\n94\n\n\n23456\n\n\n\n\n\n\n\n\nEx. \n\n\nSelect stud_name, grade \nfrom grades\nwhere prof_name = \u201cJobs\u201d;\n\n\n\n\nNote:\n text must be surrended by quotes. \n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\nMeg Lyon\n\n\n79\n\n\n\n\n\n\nJane McKen\n\n\n83\n\n\n\n\n\n\nRichard Fe\n\n\n70\n\n\n\n\n\n\nPaul Shelb\n\n\n66\n\n\n\n\n\n\nJohn Jacks\n\n\n85\n\n\n\n\n\n\n\n\n\n\nYou should know\n\n\n\n\nHow to step through pseudocode\n\n\nHow to write some simple SQL queries using: \u2013  avg, max, where\n\n\n\n\nLecture 4 - January 11th, 2017\n\n\nSelect *\n is shorthand for \u201cselect all of the columns of the table\u201d. \n\n\n*\n can be viewed as a wild card. \n\n\nselect * from grades where crn = 23456 and grade \n 50;\n\n\nselect count(*)\n will return the number of rows returned. (Important for assignment 1). \n\n\nselect * from grades order by stud_name;\n will order the entries.\n\n\nselect * from grades order by grade desc;\n will sort by descending order.\n\n\nQuestion:\n Create a list of student names for Turing\u2019s class, ordered by name?\n\n\nselect stud_name from grades where prof_name = Turing order by stud_name;\n\n\nYou should know\n\n\n\n\nHow to step through pseudocode\n\n\nHow to write some simple SQL queries using:\n\n\navg\n\n\nmax\n\n\nwhere\n\n\nselect * \n\n\nselect count(*)\n\n\norder by\n\n\n\n\n\n\n\n\nMore Pseudocode Practice\n\n\nQuestion:\n  Write a query to print phone number of a person if it exists in the table\n\n\ninput: name_in\n holds the name we look for\n\n\n\n\n\n\n\n\nname\n\n\nnumber\n\n\n\n\n\n\n\n\n\n\nJoe\n\n\n472-5700\n\n\n\n\n\n\nLeo\n\n\n472-5702\n\n\n\n\n\n\nSara\n\n\n472-5701\n\n\n\n\n\n\n\n\nStep1 i=1\nStep2 found=NO\nStep3 while i =\n #rows in table do Step4-7\nStep4   if name in row i is name_in do Step5\n6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print \nno such person in directory.\n\n\n\n\n\nInefficiency, if you find the name and it's the first one in the table, the while loop will still run. \n\n\nStep1 i=1\nStep2 found=NO\nStep3 while i =\n #rows in table AND found = NO do Step4-7\nStep4   if name in row i is name_in do Step5\n6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print \nno such person in directory.\n\n\n\n\n\nExecution: \n\n\nname_in = \nLeo\n\ni=1\nfound = NO\nrows# = 3\n--\ni = 2\n--\n472-5702\nfound = YES\n\ni = 3\n--\nExit while loop\n\n\n\n\nselect number from phone_numbers where name = \"Leo\";\n - will be the query.\n\n\nCollatz Conjecture\n\n\n\n\nPick a number.\n\n\nIf it\u2019s even, divide by two \n\n\nIf odd multiply by three and add one \n\n\n\n\n\n\nRepeat\n\n\nStop if the number is 1\n\n\n\n\nQuestion:\n Write this in Pseudocode \n\n\nBonus: Of Interest\n\n\n\n\nNo one knows if there\u2019s a number for which the collatz conjecture will not terminate\n\n\nHas been checked for all numbers up to 260 \u2013  All of which do terminate at 1\n\n\n\n\ninpurt num+in (number to test)\nif num_in \n 1\n    print \nerror, bad number\n Exit \n\ncur_num = num_in\n    while cur_num is not 1\n        if cur_num is even do \n            divide by 2\n        else if cur_num is odd do \n            cur_num X 3 + 1\n\n\n\n\nnum_in = 4\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop\n--\nnum_in = 5\ncur_num = 5\n\ncur_num = 16\n\ncur_num = 8\n\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop", 
            "title": "2 Databases"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#databases-and-pseudocode", 
            "text": "", 
            "title": "Databases and Pseudocode"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-2-january-6th-2017", 
            "text": "Motivating Example:  CSC 106 - Keeping Records of Grades  Goal: How to work with this Data    Pseudocode -  Logic writing on your code.  Algorithm -  Sets of steps    Table 1:      stud_id  stud_name  course_name  crn  prof_name  grade      101  Joe Smith  CSC 106  23456  Turing  80    111  John Jackson  CSC 106  23456  Turing  45    145  Al Green  CSC 106  23456  Turing  66    301  Meg Lyon  CSC 106  23457  Jobs  79    200  Jane McKenzie  CSC 106  23457  Jobs  83     Solution For:  The above question  total = 0\ncount = 0\ni = 1\n\nwhile i =  total # rows in table\n    total = total + grade in row i\n    count = count + 1\n    i = i + 1\n\naverage = total / count  Solution For:  Keeping track of grades for a specific teacher  total = 0\ncount = 0 \ni = 1\n\nwhile i =  total # rows in table\n    if prof-name of row i = Turing\n        total = toal + grade in row i\n        count = count + 1\n    i = i + 1\n\naverage = total / count  Solution For:  Inserting a new grade in the table  Before:  i = # rows in table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\ncourse_name for row i = CSC 106 (Too much info)\nCRN for row i = 23456\nprof-name for row i = Turing (Too much info - CRN is all mighty)\ngrade for row i = 91  After:  i = # rows in grades table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\nCRN for row i = 23456\ngrade for row i = 91   NOTE:  The question now has two tables to work with instead of one.  Table 1: Courses     course  crn  prof_name      CSC 106  23456  Turing    CSC 106  23457  Jobs     Table 2: Grades     stud_id  stud_name  crn  grade      101  Joe Smith  23456  80    111  John Jackson  23456  45    145  Al Green  23456  66    301  Meg Lyon  23457  79    200  Jane McKenzie  23457  83      Solution For:  Calculating the average for students in class with CRN 23457  total = 0\ncount = 0\ni = 1\n\nwhile i =  total # of rows in grades tables\n    if crn in row i is 23457\n        total = total + grade in row i\n        count = count + 1\n    i + i + 1\naverage = total / count  Solution For:  Calculating a better average  if  count = 0 \n    average = 0\nelse \n    average = total/count  Solution For:  Table Case: Inserting a new grade into two tables  if input crn is not in classes table \n    return error\nelse \n    stud_id for row i = 313\n    stud_name = Steve Cook\n    crn = 23456\n    grade = 91  Solution For:  Calculating the average grade for classes that Turing teaches  total = 0 \ncount = 0\nj = 1 (Index into classes table)\n\nwhile j =  # rows in classes table \n    if row j of classes tables has prof_name = Turing\n        my_crn = crn in j of classes table\n\n        i = 1\n        while i =  #rows in grades table\n            if crn for row i of grades table  = my_crn\n                table = total + grade in row i of grades table\n                count = count + 1\n            i = i + 1\n    j = j + 1", 
            "title": "Lecture 2 - January 6th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-3-january-10th-2017", 
            "text": "", 
            "title": "Lecture 3 - January 10th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#trace-through-code", 
            "text": "Code:  Step1 - total=0\nStep2 - count=0\nStep3 - i=1\nStep4 - while i  = # rows in table, repeat steps 5 through 8\nStep5 -     if prof_name of row i equals Turing, do line 6 and 7 \nStep6 -         total = total + grade in row i\nStep7 -         count = count + 1\nStep8 -     i=i+1\nStep9 - average = total / count  Table 1:     stud_id  stud_name  course_name  crn  prof_name  grade      111  John Jackson  CSC 106  23456  Turing  45    200  Jane McKenzie  CSC 106  23457  Jobs  83    342  Patricia Dune  CSC 106  23456  Turing  94    301  Meg Lyon  CSC 106  23457  Jobs  79     Solution:  #rows = 4\n\ntotal=0\ncount=0\ni=1\n--\ntotal=45\ncount=1\n1=2\n--\ni=3\n--\ntotal=139\ncount=2\ni=4\n--\ni=5\n-- \nAverage = 139/2 = 69.5", 
            "title": "Trace Through Code"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#write-pseudocode-that-calculates-the-maximum-grade-for-a-student-in-class-with-crn-23456", 
            "text": "", 
            "title": "Write pseudocode that calculates the maximum grade for a student in class with crn = 23456"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#trace-through-code_1", 
            "text": "Code:  Step1 - max=-1\nStep2 - i=1\nStep3 - while i  = # rows in table, repeat steps 4 through 7\nStep4 -     if crn of row i equals 23456, do line 5 and 6 \nStep5 -         if max   grade in row i do line 6\nStep6 -             max = grade in row i \nStep7 -     i=i+1  Table:     stud_id  stud_name  course_name  crn  prof_name  grade      111  John Jackson  CSC 106  23456  Turing  45    200  Jane McKenzie  CSC 106  23457  Jobs  83    342  Patricia Dune  CSC 106  23456  Turing  94    301  Meg Lyon  CSC 106  23457  Jobs  79     Solution:    max=-1\ni=1\n--\nmax=45\ni=2\n--\ni=3\n--\nmax=94\ni=4\n--\ni=5", 
            "title": "Trace Through Code"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#sql", 
            "text": "Sql is a structured query language.", 
            "title": "SQL"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#database", 
            "text": "A database is a collection of tables.  Install SqLite3  brew install sqlite  Start by making a blank table:  create table grades( stud_id int, stud_name text, course_name text, crn int, prof_name text, grade int);  Note:  Order of values must match the order of the columns when you created the table.", 
            "title": "Database"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#query", 
            "text": "A query is a select statement that tells the computer what columms the result should have.   Ex.  Select stud_name, grade \nfrom grades;  Returns --  Table 1: Grades     stud_name  grade      name  56    name  78     Ex.   Select avg(grade)\nFrom grades;  Returns --  Table 1: Average  |  avg(grade)  |\n| ------------:|\n| 72.8         |  Ex.  select max(grade)\nfrom grades;  Returns --  Table 1: Max  |  max  |\n| :----:|\n| 94    |  Ex.  Select stud_name, grade, crn \nfrom grades\nwhere crn = 23456;  Returns --  Table 1: Grades     stud_name  grade  crn      Joe Smith  80  23456    John Jacks  45  23456    Al Green  66  23456    Greg Black  60  23456    Patricia D  94  23456     Ex.   Select stud_name, grade \nfrom grades\nwhere prof_name = \u201cJobs\u201d;  Note:  text must be surrended by quotes.   Returns --  Table 1: Grades     stud_name  grade      Meg Lyon  79    Jane McKen  83    Richard Fe  70    Paul Shelb  66    John Jacks  85", 
            "title": "Query"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#you-should-know", 
            "text": "How to step through pseudocode  How to write some simple SQL queries using: \u2013  avg, max, where", 
            "title": "You should know"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-4-january-11th-2017", 
            "text": "Select *  is shorthand for \u201cselect all of the columns of the table\u201d.   *  can be viewed as a wild card.   select * from grades where crn = 23456 and grade   50;  select count(*)  will return the number of rows returned. (Important for assignment 1).   select * from grades order by stud_name;  will order the entries.  select * from grades order by grade desc;  will sort by descending order.  Question:  Create a list of student names for Turing\u2019s class, ordered by name?  select stud_name from grades where prof_name = Turing order by stud_name;", 
            "title": "Lecture 4 - January 11th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#you-should-know_1", 
            "text": "How to step through pseudocode  How to write some simple SQL queries using:  avg  max  where  select *   select count(*)  order by", 
            "title": "You should know"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#more-pseudocode-practice", 
            "text": "Question:   Write a query to print phone number of a person if it exists in the table  input: name_in  holds the name we look for     name  number      Joe  472-5700    Leo  472-5702    Sara  472-5701     Step1 i=1\nStep2 found=NO\nStep3 while i =  #rows in table do Step4-7\nStep4   if name in row i is name_in do Step5 6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print  no such person in directory.   Inefficiency, if you find the name and it's the first one in the table, the while loop will still run.   Step1 i=1\nStep2 found=NO\nStep3 while i =  #rows in table AND found = NO do Step4-7\nStep4   if name in row i is name_in do Step5 6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print  no such person in directory.   Execution:   name_in =  Leo \ni=1\nfound = NO\nrows# = 3\n--\ni = 2\n--\n472-5702\nfound = YES\n\ni = 3\n--\nExit while loop  select number from phone_numbers where name = \"Leo\";  - will be the query.", 
            "title": "More Pseudocode Practice"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#collatz-conjecture", 
            "text": "Pick a number.  If it\u2019s even, divide by two   If odd multiply by three and add one     Repeat  Stop if the number is 1   Question:  Write this in Pseudocode   Bonus: Of Interest   No one knows if there\u2019s a number for which the collatz conjecture will not terminate  Has been checked for all numbers up to 260 \u2013  All of which do terminate at 1   inpurt num+in (number to test)\nif num_in   1\n    print  error, bad number  Exit \n\ncur_num = num_in\n    while cur_num is not 1\n        if cur_num is even do \n            divide by 2\n        else if cur_num is odd do \n            cur_num X 3 + 1  num_in = 4\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop\n--\nnum_in = 5\ncur_num = 5\n\ncur_num = 16\n\ncur_num = 8\n\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop", 
            "title": "Collatz Conjecture"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/", 
            "text": "Flowcharts\n\n\nLecture 5 - January 13th, 2017\n\n\nNotes Missing\n\n\nContribute your notes \nhere\n!\n\n\n\n\nLecture 6 - January 17th, 2017\n\n\nModulo:\n The ramainder after dividing. \n\n\nQuestion:\n Determine if a year is a leap year\n\n\nStep1   Input integer year\nStep2   if year modulo 4 is 0 do Step3-9\nStep3       if year modulo 100 is 0 do Step4-7\nStep4           if year modulo 400 is 0 do Step5\nStep5               is_leap_year=True\nStep6           else do Step7\nStep7               is_leap_year=False\nStep8       else do Step9\nStep9           is_leap_year=True\nStep10   else do Step11\nStep11      is_year_leap=False\nStep12   return is_leap_year", 
            "title": "3 Flowcharts"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#flowcharts", 
            "text": "", 
            "title": "Flowcharts"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#lecture-5-january-13th-2017", 
            "text": "Notes Missing  Contribute your notes  here !", 
            "title": "Lecture 5 - January 13th, 2017"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#lecture-6-january-17th-2017", 
            "text": "Modulo:  The ramainder after dividing.   Question:  Determine if a year is a leap year  Step1   Input integer year\nStep2   if year modulo 4 is 0 do Step3-9\nStep3       if year modulo 100 is 0 do Step4-7\nStep4           if year modulo 400 is 0 do Step5\nStep5               is_leap_year=True\nStep6           else do Step7\nStep7               is_leap_year=False\nStep8       else do Step9\nStep9           is_leap_year=True\nStep10   else do Step11\nStep11      is_year_leap=False\nStep12   return is_leap_year", 
            "title": "Lecture 6 - January 17th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/", 
            "text": "Binary / Hex / 2s Complement\n\n\nLecture 6 - January 17th, 2017\n\n\nWhy Binary?\n\n\n\n\nBinary is how computers talk\n\n\nto themselves \nAND\n\n\nto each other\n\n\n\n\n\n\n\n\nDecimal Numbers\n\n\nA binary abacus\n -\n \nExample\n\n\nQuestion:\n 101 is 5 in binary\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n\n\n\n\n2^2\n\n\n2^1\n\n\n2^0\n\n\n\n\n\n\n\n\n1x2^2 + 0x2^1 + 1x2^0\n\n1x4 + 0x2 + 1x1 = 5\n\n\n\n\n\n\nNOTE:\n Test Material\n\n\nQuestion:\n What is 11111 in decimal number?\n\n\nAnswer: 31\n\n\nQuestion:\n What is the highest number you can encode with n bits?\n\n\nAnswer: 2^n -1\n\n\nEncode Numbers\n\n\nNote:\n If the decimal number is a perfect power of two, it will be easy to find, but if it's not you have \ntwo methods\n. \n\n\nMethod 1\n\n\n5 = 4 + 1\n\nSo 2^2 and 2^0\n\nSo 00101 = 5\n\n\n\n\nMethod 2\n\n\nStep1   input: number_in cur_number = number_in binary_string = \u201c\u201d\nStep2   while cur_number \n= 2\nStep3       my_encoding = input%2\nStep4       add my_encoding to leW side of binary string \nStep5       cur_number = round_down(cur_number/2)\nStep6   add cur_number to leW side of binary string\n\n\n\n\nQuestion:\n What is 11 in binary?\n\n\nnum_in = 11\n\nbinary_string=\n\n11%2 = 1\n\nbinary_string=\n1\n\n\n11/2 = 5.5 -\n 5\n5%2 = 1\n\nbinary_string=\n11\n\n\n5/2 = 2.5 -\n 2\n2%2 = 0\n\nbinary_string=\n011\n\n\n2/2 = 1\n\nbinary_string=\n1011\n\n\n\n\n\nQuestion:\n What is 8 in binary?  \n\n\nnum_in = 8 \n\nbinary_string=\n\n8%2 = 0\n\nbinary_string=\n0\n\n\n8/2 = 4\n4%2 = 0\n\nbinary_string=\n00\n\n\n4/2 = 2\n2%2 = 0\n\nbinary_string=\n000\n\n\n2/1 = 1\n\nbinary_string=\n1000\n\n\n\n\n\nNOTE:\n Practice on your own. \n\n\nLecture 7 - January 18th, 2017\n\n\nHelper: Question 2 - Assignment 1 \n\n\n\n\nInput for this program is a list of numbers. \n\n\nPseudo code for addition. \n\n\n\n\na(m-1), a(m-2), a(1), a(0)\n\n\n\n\n\n\n\n\n\n\n4\n\n\n3\n\n\n7\n\n\n\n\n\n\n\n\n\n\na(m-1)\n\n\na(m-2)\n\n\na(0)\n\n\n\n\n\n\n\n\nAnswer: m=3\n\n\n\n\n\n\n\n\n3\n\n\n2\n\n\n9\n\n\n\n\n\n\n\n\n\n\nb(2)\n\n\nb(1)\n\n\nb(0)\n\n\n\n\n\n\n\n\n437+329=766\n\n\n\n\nDraw a flow chart\n\n\n\n\nUse draw.io\n\n\nExport as an image\n\n\nHand in PDF\n\n\n\n\nBinary Numbers\n\n\n10110 = 22\n01001 = 9\n\n\n\n\nTip:\n If it ends with a 1 it is odd. If it ends in a 0 it is even.\n\n\n8 -\n 01000\n5 -\n 00101\n\n\nAlgorithm Decimal Number - Binary.\n\n\nEx. Binary Conversion\n\n\nbinary_string=\n\n\n23%2 = 1\n\nbinary_string=1\n\n23/2 = 11.5 -\n 11\n11%2 = 1\n\nbinary_string=11\n\n11/2 = 5.5 \n 5\n5%2=1\n\nbinary_string=111\n\n5/2=2.5 -\n 2\n2%2=0\n\nbinary_string=0111\n\n2/2 = 1\n\nbinary_string=10111\n\n\n\n\nNote:\n If a question ask for 5 bit number, you must include 5 places.\n\n\nAdding Binary Numbers\n\n\nEx. 00111+00001=01000\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\n1\n\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\nBonus: 00111+00111=01110\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\nEncoding Negative Numbers\n\n\n\n\nEncode the positive number\n\n\nFlip all the bits (1-\n0 and 0-\n1)\n\n\nAdd 1 to the new bit string\n\n\n\n\nQuestion:\n Convert -9 into binary\n\n\n01001\n10110\n10111\n\n\n\n\nQuestion:\n Convert 12 into binary\n\n\n01100\n10011\n10100\n\n\n\n\nTwo's complement number\n\n\nNOTE:\n Unsigned Binary Number or a Two's Complement Number. \n\n\nIgnore overflow that carries in Two's compliment\n\n\nConvert Two's complement into decimal\n\n\n\n\nIf negative: \n\n\nFlip a bit and add one\n\n\nPut the negative back at the end\n\n\n\n\n\n\nIf positive: \n\n\nNormal Conversion\n\n\n\n\n\n\n\n\nLecture 8 - January 20th, 2017\n\n\nNotes Missing\n\n\nContribute your notes \nhere\n!", 
            "title": "4 Number Systems"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#binary-hex-2s-complement", 
            "text": "", 
            "title": "Binary / Hex / 2s Complement"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-6-january-17th-2017", 
            "text": "", 
            "title": "Lecture 6 - January 17th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#why-binary", 
            "text": "Binary is how computers talk  to themselves  AND  to each other", 
            "title": "Why Binary?"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#decimal-numbers", 
            "text": "A binary abacus  -   Example  Question:  101 is 5 in binary     1  0  1      2^2  2^1  2^0     1x2^2 + 0x2^1 + 1x2^0\n\n1x4 + 0x2 + 1x1 = 5   NOTE:  Test Material  Question:  What is 11111 in decimal number?  Answer: 31  Question:  What is the highest number you can encode with n bits?  Answer: 2^n -1", 
            "title": "Decimal Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#encode-numbers", 
            "text": "Note:  If the decimal number is a perfect power of two, it will be easy to find, but if it's not you have  two methods .   Method 1  5 = 4 + 1\n\nSo 2^2 and 2^0\n\nSo 00101 = 5  Method 2  Step1   input: number_in cur_number = number_in binary_string = \u201c\u201d\nStep2   while cur_number  = 2\nStep3       my_encoding = input%2\nStep4       add my_encoding to leW side of binary string \nStep5       cur_number = round_down(cur_number/2)\nStep6   add cur_number to leW side of binary string  Question:  What is 11 in binary?  num_in = 11\n\nbinary_string= \n11%2 = 1\n\nbinary_string= 1 \n\n11/2 = 5.5 -  5\n5%2 = 1\n\nbinary_string= 11 \n\n5/2 = 2.5 -  2\n2%2 = 0\n\nbinary_string= 011 \n\n2/2 = 1\n\nbinary_string= 1011   Question:  What is 8 in binary?    num_in = 8 \n\nbinary_string= \n8%2 = 0\n\nbinary_string= 0 \n\n8/2 = 4\n4%2 = 0\n\nbinary_string= 00 \n\n4/2 = 2\n2%2 = 0\n\nbinary_string= 000 \n\n2/1 = 1\n\nbinary_string= 1000   NOTE:  Practice on your own.", 
            "title": "Encode Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-7-january-18th-2017", 
            "text": "Helper: Question 2 - Assignment 1    Input for this program is a list of numbers.   Pseudo code for addition.    a(m-1), a(m-2), a(1), a(0)     4  3  7      a(m-1)  a(m-2)  a(0)     Answer: m=3     3  2  9      b(2)  b(1)  b(0)     437+329=766", 
            "title": "Lecture 7 - January 18th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#draw-a-flow-chart", 
            "text": "Use draw.io  Export as an image  Hand in PDF", 
            "title": "Draw a flow chart"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#binary-numbers", 
            "text": "10110 = 22\n01001 = 9  Tip:  If it ends with a 1 it is odd. If it ends in a 0 it is even.  8 -  01000\n5 -  00101", 
            "title": "Binary Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#algorithm-decimal-number-binary", 
            "text": "Ex. Binary Conversion  binary_string= \n\n23%2 = 1\n\nbinary_string=1\n\n23/2 = 11.5 -  11\n11%2 = 1\n\nbinary_string=11\n\n11/2 = 5.5   5\n5%2=1\n\nbinary_string=111\n\n5/2=2.5 -  2\n2%2=0\n\nbinary_string=0111\n\n2/2 = 1\n\nbinary_string=10111  Note:  If a question ask for 5 bit number, you must include 5 places.", 
            "title": "Algorithm Decimal Number - Binary."
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#adding-binary-numbers", 
            "text": "Ex. 00111+00001=01000       1  1  1        0  0  1  1  1    +          0  0  0  0  1    =          0  1  0  0  0     Bonus: 00111+00111=01110       1  1  1        0  0  1  1  1    +          0  0  1  1  1    =          0  1  1  1  0", 
            "title": "Adding Binary Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#encoding-negative-numbers", 
            "text": "Encode the positive number  Flip all the bits (1- 0 and 0- 1)  Add 1 to the new bit string   Question:  Convert -9 into binary  01001\n10110\n10111  Question:  Convert 12 into binary  01100\n10011\n10100", 
            "title": "Encoding Negative Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#twos-complement-number", 
            "text": "NOTE:  Unsigned Binary Number or a Two's Complement Number.   Ignore overflow that carries in Two's compliment", 
            "title": "Two's complement number"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#convert-twos-complement-into-decimal", 
            "text": "If negative:   Flip a bit and add one  Put the negative back at the end    If positive:   Normal Conversion", 
            "title": "Convert Two's complement into decimal"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-8-january-20th-2017", 
            "text": "Notes Missing  Contribute your notes  here !", 
            "title": "Lecture 8 - January 20th, 2017"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/", 
            "text": "Guest 1\n\n\nLecture 9 - January 24th, 2017\n\n\nGuest Lecture\n\n\nBy George Tzanetakis (Associate Professor) - Music and Computer Science\n\n\nThe Northways\n\n\nNorthway Games\n\n\nHuman Computer Interaction\n\n\n\n\nLack of shared understanding\n\n\nCommunication Bottleneck:\n\n\nInput: Mouse/Keyboard (touch screen)\n\n\nOutput: Rectangle 2D screen, speakers\n\n\n\n\n\n\n\n\nWhy Music**\n\n\n\n\nThe way music is \ncreated\n, \ndistrubuted\n, and \nperceived\n had been and will be transformed by advances in technology.\n\n\nArguably the most complex and expressive interaction with artifacts.\n\n\n\n\nDigital Music Data\n\n\n\n\n2000: ~1000 tracks\n\n\n2010: ~13 million tracks\n\n\n\n\nStatisticaly Supervised Learning\n\n\nPlaying/Improvising music with a computer\n\n\n\n\nMachine Orchestra Kapur - Jan. 2010\n\n\n\n\n\n\nEnd of Material for Midterm 1", 
            "title": "5 Guest 1"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#guest-1", 
            "text": "", 
            "title": "Guest 1"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#lecture-9-january-24th-2017", 
            "text": "", 
            "title": "Lecture 9 - January 24th, 2017"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#guest-lecture", 
            "text": "By George Tzanetakis (Associate Professor) - Music and Computer Science  The Northways  Northway Games", 
            "title": "Guest Lecture"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#human-computer-interaction", 
            "text": "Lack of shared understanding  Communication Bottleneck:  Input: Mouse/Keyboard (touch screen)  Output: Rectangle 2D screen, speakers", 
            "title": "Human Computer Interaction"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#why-music", 
            "text": "The way music is  created ,  distrubuted , and  perceived  had been and will be transformed by advances in technology.  Arguably the most complex and expressive interaction with artifacts.", 
            "title": "Why Music**"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#digital-music-data", 
            "text": "2000: ~1000 tracks  2010: ~13 million tracks", 
            "title": "Digital Music Data"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#statisticaly-supervised-learning", 
            "text": "", 
            "title": "Statisticaly Supervised Learning"
        }, 
        {
            "location": "/A)-Lecture/5-Guest-1/#playingimprovising-music-with-a-computer", 
            "text": "Machine Orchestra Kapur - Jan. 2010    End of Material for Midterm 1", 
            "title": "Playing/Improvising music with a computer"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/", 
            "text": "Logic\n\n\nLecture 10 - January 25th 2017\n\n\nLogic\n\n\n\n\nLogic gates\n\n\nForm basis of computer hardware and computer operations\n\n\n\n\nOR Truth Table (+)\n\n\nAND Truth Table (*)\n\n\nCombine : OR and AND\n\n\n\n\nNot(~)\n\n\n\n\nCircuit Diagrams\n\n\nCompare for Equality\n\n\nAdding with Logic - Full Adder Circuit\n\n\nTruth Table -\n Set of OR AND and NOT\n\n\nXOR Truth Table (Circle +)\n\n\nTest your understanding\n\n\n(X and Y) or Z\n\n\n2nd slide -\n E)\n\n\nSorting\n\n\n\n\nOften useful to have data sorted \n\n\nfind values more quickly\n\n\ntest for existence more quickly\n\n\n\n\n\n\nMany algorithms for sorting\n\n\n\n\nArrays\n\n\nArrays are like a list\n\n\nStart numbering positions at 0\n\n\nSquare brackets []\n\n\nAssign a value to an array\n\n\nLeft side changes\n\n\nSelection Sort\n\n\nSort hand of cadrs ?\n\n\nNumerically\n\n\nEx. \n\n\n[2,8,6,3]\n\n\nUnsorted part of the list and sorted part of the list.\n\n\nInput integer array my_nums\n\n\nKeep track of sorted array section \nSearch through unsorted array for max val\nSwap max val with element at the rightmmost position of unsorted section\nMove sorted section one element to left\nstop when unsorted section has size 1", 
            "title": "6 Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#logic", 
            "text": "", 
            "title": "Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#lecture-10-january-25th-2017", 
            "text": "", 
            "title": "Lecture 10 - January 25th 2017"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#logic_1", 
            "text": "Logic gates  Form basis of computer hardware and computer operations   OR Truth Table (+)  AND Truth Table (*)  Combine : OR and AND   Not(~)", 
            "title": "Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#circuit-diagrams", 
            "text": "Compare for Equality", 
            "title": "Circuit Diagrams"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#adding-with-logic-full-adder-circuit", 
            "text": "Truth Table -  Set of OR AND and NOT  XOR Truth Table (Circle +)  Test your understanding  (X and Y) or Z  2nd slide -  E)", 
            "title": "Adding with Logic - Full Adder Circuit"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#sorting", 
            "text": "Often useful to have data sorted   find values more quickly  test for existence more quickly    Many algorithms for sorting", 
            "title": "Sorting"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#arrays", 
            "text": "Arrays are like a list  Start numbering positions at 0  Square brackets []  Assign a value to an array  Left side changes  Selection Sort  Sort hand of cadrs ?  Numerically  Ex.   [2,8,6,3]  Unsorted part of the list and sorted part of the list.  Input integer array my_nums  Keep track of sorted array section \nSearch through unsorted array for max val\nSwap max val with element at the rightmmost position of unsorted section\nMove sorted section one element to left\nstop when unsorted section has size 1", 
            "title": "Arrays"
        }, 
        {
            "location": "/B)-Lab/Lab/", 
            "text": "Databases\n\n\nLab 1 - January 10th, 2017\n\n\nSqLite\n\n\nHow we access data is we use these things called queries. \n\n\nIn the terminal type in:\n\n\nsqlite3\n\nand then\n\n.read FILENAME\n\nand then\n\nselect * from characters;\n\n\n\n\n\nOrder matters when running \nselect\n in the terminal from the database. \n\n\nIt is not case sensitive.\n\n\nEx. You can use FROM, ChaRacters, Select, ect. \n\n\nSelect dinstinct:\n applies only to what follows, and makes it so only unique data gets return. \n\n\nEx.\n\n\nsql\n select distinct title from characters;\n \n\n\nYou can have an or in your where.\n\n\nEx. \n\n\n select * from characters where title = 'Horton Hears a Who' or title = 'Horton Hatches the Egg';\n\n\n\n\nYou can order your return.\n\n\nEx. \n\n\nsql\n select name, year from characters order by year, title;\n\n\nAggregate function\n\n\n\n\ncount\n\n\nmax\n\n\nmin\n\n\navg\n\n\n\n\nLab 2 - January 17th, 2017\n\n\nFlowcharts\n\n\n\n\nRounded Rectangle -\n Start and Stop\n\n\nRectangle -\n Process\n\n\nDiamond -\n Decision\n\n\nYes or No\n\n\n\n\n\n\nItalic Rectangle -\n Data Input or Output\n\n\n\n\nCommunicate an algorithm\n\n\n\n\nEasy \n\n\nVisual\n\n\nSimple for hard problems\n\n\n\n\nCriteria for lab assignment\n\n\n\n\nFlowchart: \n\n\nDraw by hand \nor\n \n\n\nDraw with https://draw.io\n\n\n\n\n\n\n\n\nYou should know how to:\n\n\n\n\nConvert Pseudocode to Flowchart and Flowchart to Pseudocode\n\n\n\n\nLab Exercise: Draw a flowchart for playing 1 turn of \"computer pictionary\"\n\n\n\n\n2 teams (Team A and B)\n\n\nOnly using names of movies\n\n\nComputer draws movie name (if it can)\n\n\n5 guesses\n\n\n\n\nN.B. Team A draws a name -\n Team A inputs name into computer -\n Team B guesses (Max. 5 times)\n\n\nMy Solution:\n\n\n\n\nGroup Solution:\n\n\n\n\nEx. \n\n\nPseudoCode Exercise - Get the name and title of books where there is a 1 and the year in lesser than 1960\n\n\n\n\n\n\n\n\nname\n\n\ntitle\n\n\nyear\n\n\nhuman\n\n\n\n\n\n\n\n\n\n\nexample\n\n\nexample\n\n\n1983\n\n\n1\n\n\n\n\n\n\nexample2\n\n\nexample2\n\n\n1924\n\n\n0\n\n\n\n\n\n\nexample3\n\n\nexample3\n\n\n1999\n\n\n1\n\n\n\n\n\n\n\n\nAnswer: \n\n\nSelect name, title from characters where human=1 and year\n1960\n\n\nLab 3 - January 24th 2017\n\n\n11111+010101=1010100\n\n\nHex to binary -\n\n\n4EF(Base16) \n\n\n\n\n\n\n\n\n\n\nDec\n\n\nHex\n\n\nBinary\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0000\n\n\n\n\n\n\n1\n\n\n1\n\n\n0001\n\n\n\n\n\n\n2\n\n\n2\n\n\n0010\n\n\n\n\n\n\n3\n\n\n3\n\n\n0011\n\n\n\n\n\n\n4\n\n\n4\n\n\n0100\n\n\n\n\n\n\n10\n\n\nA\n\n\n1010\n\n\n\n\n\n\n11\n\n\nB\n\n\n1011\n\n\n\n\n\n\n12\n\n\nC\n\n\n1100\n\n\n\n\n\n\n13\n\n\nD\n\n\n1101\n\n\n\n\n\n\n14\n\n\nE\n\n\n1110\n\n\n\n\n\n\n15\n\n\nF\n\n\n1111\n\n\n\n\n\n\n\n\nBinary to Hex\n\n\n00101101111\n2DF\n\n\nHex to Dec\n\n\n2DF\n16(2) 16(1) 16(0)\n\n\n= Big Number\n\n\n2's compliment\n\n\nNumber of bits even\n\n\nPositive number 2's complement\n+28 \n\n\nis 28 in binary", 
            "title": "Lab"
        }, 
        {
            "location": "/B)-Lab/Lab/#databases", 
            "text": "", 
            "title": "Databases"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-1-january-10th-2017", 
            "text": "", 
            "title": "Lab 1 - January 10th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#sqlite", 
            "text": "How we access data is we use these things called queries.   In the terminal type in:  sqlite3\n\nand then\n\n.read FILENAME\n\nand then\n\nselect * from characters;  Order matters when running  select  in the terminal from the database.   It is not case sensitive.  Ex. You can use FROM, ChaRacters, Select, ect.   Select dinstinct:  applies only to what follows, and makes it so only unique data gets return.   Ex.  sql\n select distinct title from characters;    You can have an or in your where.  Ex.    select * from characters where title = 'Horton Hears a Who' or title = 'Horton Hatches the Egg';  You can order your return.  Ex.   sql\n select name, year from characters order by year, title;", 
            "title": "SqLite"
        }, 
        {
            "location": "/B)-Lab/Lab/#aggregate-function", 
            "text": "count  max  min  avg", 
            "title": "Aggregate function"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-2-january-17th-2017", 
            "text": "", 
            "title": "Lab 2 - January 17th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#flowcharts", 
            "text": "Rounded Rectangle -  Start and Stop  Rectangle -  Process  Diamond -  Decision  Yes or No    Italic Rectangle -  Data Input or Output", 
            "title": "Flowcharts"
        }, 
        {
            "location": "/B)-Lab/Lab/#communicate-an-algorithm", 
            "text": "Easy   Visual  Simple for hard problems", 
            "title": "Communicate an algorithm"
        }, 
        {
            "location": "/B)-Lab/Lab/#criteria-for-lab-assignment", 
            "text": "Flowchart:   Draw by hand  or    Draw with https://draw.io", 
            "title": "Criteria for lab assignment"
        }, 
        {
            "location": "/B)-Lab/Lab/#you-should-know-how-to", 
            "text": "Convert Pseudocode to Flowchart and Flowchart to Pseudocode   Lab Exercise: Draw a flowchart for playing 1 turn of \"computer pictionary\"   2 teams (Team A and B)  Only using names of movies  Computer draws movie name (if it can)  5 guesses   N.B. Team A draws a name -  Team A inputs name into computer -  Team B guesses (Max. 5 times)  My Solution:   Group Solution:   Ex.   PseudoCode Exercise - Get the name and title of books where there is a 1 and the year in lesser than 1960     name  title  year  human      example  example  1983  1    example2  example2  1924  0    example3  example3  1999  1     Answer:   Select name, title from characters where human=1 and year 1960", 
            "title": "You should know how to:"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-3-january-24th-2017", 
            "text": "11111+010101=1010100  Hex to binary -  4EF(Base16)       Dec  Hex  Binary      0  0  0000    1  1  0001    2  2  0010    3  3  0011    4  4  0100    10  A  1010    11  B  1011    12  C  1100    13  D  1101    14  E  1110    15  F  1111     Binary to Hex  00101101111\n2DF  Hex to Dec  2DF\n16(2) 16(1) 16(0)  = Big Number  2's compliment  Number of bits even  Positive number 2's complement\n+28   is 28 in binary", 
            "title": "Lab 3 - January 24th 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/", 
            "text": "Announcements\n\n\nAnnouncement 1 - January 6th, 2017\n\n\n\n\nAlice Gibbons (aligibbo@uvic.ca) - Main lab instructor\n\n\n10$ Access Cards (Get one from the library to have access outside of lab hours.)\n\n\n\n\nAnnouncement 2 - January 24th, 2017\n\n\n\n\nLab attendance is now online in Connex.\n\n\n\n\nAnnouncement 3 - January 24th, 2017\n\n\n\n\nKnow your lab section for the midterms.\n\n\nMidterm:\n\n\n40 Multiple Choice\n\n\n1 Long Answer", 
            "title": "Announcements"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcements", 
            "text": "", 
            "title": "Announcements"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-1-january-6th-2017", 
            "text": "Alice Gibbons (aligibbo@uvic.ca) - Main lab instructor  10$ Access Cards (Get one from the library to have access outside of lab hours.)", 
            "title": "Announcement 1 - January 6th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-2-january-24th-2017", 
            "text": "Lab attendance is now online in Connex.", 
            "title": "Announcement 2 - January 24th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-3-january-24th-2017", 
            "text": "Know your lab section for the midterms.  Midterm:  40 Multiple Choice  1 Long Answer", 
            "title": "Announcement 3 - January 24th, 2017"
        }
    ]
}