{
    "docs": [
        {
            "location": "/", 
            "text": "CSC 106\n\n\nConnex\n\n\n\n\nInstructor\n: Alona Fyshe\n\n\nOffice\n: ECS 618\n\n\nEmail\n: \nafyshe@uvic.ca\n\n\nOffice Hours\n:\n\n\nWednesday, 09:30am to 11:20am \n\n\nOr by appointment\n\n\n\n\n\n\nClassroom\n: David Turpin Building - A120\n\n\n\n\nOverview\n\n\nA general introduction to the field of computer science, its basic areas and its connections to interdisciplinary topics.\n\n\nTextbook\n\n\nThere is no textbook required for this course, but the recommended textbook is: \n\n\nInvitation to Computer Science (7th edition) by G. Michael Schneider and Judith L. Gersting, Cengage Learning.\n\n\n\nAssessment\n\n\n\n\n\n\n\n\nTask\n\n\nWeight\n\n\n\n\n\n\n\n\n\n\nAssignments\n\n\n40%\n\n\n\n\n\n\nLab Attendance\n\n\n5%\n\n\n\n\n\n\nMidterm Exams (3)\n\n\n55%\n\n\n\n\n\n\n\n\nDue Dates\n\n\n\n\n\n\n\n\nTask\n\n\nWeight\n\n\nDue (Subject to Change)\n\n\n\n\n\n\n\n\n\n\nAssignment 1\n\n\n10%\n\n\nJan. 24th, 2017\n\n\n\n\n\n\nMidterm Exam 1\n\n\n~19%\n\n\nJan. 31st, 2017\n\n\n\n\n\n\nAssignment 2\n\n\n10%\n\n\nFeb. 10th, 2017\n\n\n\n\n\n\nAssignment 3\n\n\n10%\n\n\nMar. 3rd, 2017\n\n\n\n\n\n\nMidterm Exam 2\n\n\n~19%\n\n\nMar. 7th, 2017\n\n\n\n\n\n\nAssignment 4\n\n\n10%\n\n\nMar. 21st, 2017\n\n\n\n\n\n\nMidterm Exam 3\n\n\n~19%\n\n\nApril 4th, 2017", 
            "title": "Home"
        }, 
        {
            "location": "/#csc-106", 
            "text": "", 
            "title": "CSC 106"
        }, 
        {
            "location": "/#connex", 
            "text": "Instructor : Alona Fyshe  Office : ECS 618  Email :  afyshe@uvic.ca  Office Hours :  Wednesday, 09:30am to 11:20am   Or by appointment    Classroom : David Turpin Building - A120", 
            "title": "Connex"
        }, 
        {
            "location": "/#overview", 
            "text": "A general introduction to the field of computer science, its basic areas and its connections to interdisciplinary topics.", 
            "title": "Overview"
        }, 
        {
            "location": "/#textbook", 
            "text": "There is no textbook required for this course, but the recommended textbook is:   Invitation to Computer Science (7th edition) by G. Michael Schneider and Judith L. Gersting, Cengage Learning.", 
            "title": "Textbook"
        }, 
        {
            "location": "/#assessment", 
            "text": "Task  Weight      Assignments  40%    Lab Attendance  5%    Midterm Exams (3)  55%", 
            "title": "Assessment"
        }, 
        {
            "location": "/#due-dates", 
            "text": "Task  Weight  Due (Subject to Change)      Assignment 1  10%  Jan. 24th, 2017    Midterm Exam 1  ~19%  Jan. 31st, 2017    Assignment 2  10%  Feb. 10th, 2017    Assignment 3  10%  Mar. 3rd, 2017    Midterm Exam 2  ~19%  Mar. 7th, 2017    Assignment 4  10%  Mar. 21st, 2017    Midterm Exam 3  ~19%  April 4th, 2017", 
            "title": "Due Dates"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/", 
            "text": "CSC 106 - Introduction\n\n\nLecture 1 - January 4th, 2017\n\n\nThese notes list the main ideas for this lecture. Please check out Alona Fyshe's slides for more information.\n\n\n\n\n\n\nAbacus (Japanese)\n\n\nWhy should we care about polynomials?\n\n\nAnalytical Engine\n\n\nPunch Cards (Held Instructions)\n\n\nRAM \n\n\nCPU\n\n\n\n\n\n\nTabulate the Census\n\n\nData Punch Cards\n\n\nIBM\n\n\n\n\n\n\nComputers (Who invented the first computer? A lot of people.)\n\n\nBinary \n\n\nConrad Zuse (Standard - Binary)\n\n\nAlan Turing (Crack German Codes - WW2)\n\n\nColossus (Crack German Codes - WW2)\n\n\nENIAC\n\n\nSolid State Transistor (Computers no longer for Gov, also for Business) \n\n\nApple (Bring Computers to Home)\n\n\nMacintosh (Desktop and Folders - Computers no longer just a terminal)", 
            "title": "1 Introduction"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/#csc-106-introduction", 
            "text": "", 
            "title": "CSC 106 - Introduction"
        }, 
        {
            "location": "/A)-Lecture/1-Introduction/#lecture-1-january-4th-2017", 
            "text": "These notes list the main ideas for this lecture. Please check out Alona Fyshe's slides for more information.    Abacus (Japanese)  Why should we care about polynomials?  Analytical Engine  Punch Cards (Held Instructions)  RAM   CPU    Tabulate the Census  Data Punch Cards  IBM    Computers (Who invented the first computer? A lot of people.)  Binary   Conrad Zuse (Standard - Binary)  Alan Turing (Crack German Codes - WW2)  Colossus (Crack German Codes - WW2)  ENIAC  Solid State Transistor (Computers no longer for Gov, also for Business)   Apple (Bring Computers to Home)  Macintosh (Desktop and Folders - Computers no longer just a terminal)", 
            "title": "Lecture 1 - January 4th, 2017"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/", 
            "text": "Lecture 15 - February 8th, 2017\n\n\nArtificial Intelligence and Data Mining\n\n\n\n\nSomething Fun\n\n\nquickdraw.withgoogle.com/\n\n\n\n\n\n\n\n\nSocial Media Data\n\n\n\n\n2 million emails per second\n\n\n500 million tweets on twitter a day\n\n\n500 million new videos viewed to youtube a minute. \n\n\n\n\nScientific Data\n\n\n\n\nData collected and stored at enormous speeds (GB/hour)\n\n\nremote sensors on a satellite\n\n\n\n\n\n\n\n\nOther Data Sources?\n\n\nNeed for Data Mining\n\n\n\n\nHuman Analysts: Too much work\n\n\nData Mining: automatically discover useful information\n\n\n\n\nExample:\n\n\n\n\nPredict if an email is spam or not\n\n\nTrain a model\n\n\nShow the computer a bunch of emails, some of which are spam, some of which are not\n\n\nTell the computer which words appear in each email\n\n\nComputer learns words that tend to appear with spam emails, or with not-spam emails.\n\n\n\n\n\n\nTest the model\n\n\nShow the computer a new email\n\n\nCheck if the computer predicts the right class\n\n\n\n\n\n\n\n\nPredictive Data Mining or Supervised learning\n\n\nLearning\n\n\nWe can think of at least three different problems....\n\n\nEx.\n Imagine I'm trying predict wether my neighbour is going to drive into work, so I can ask for a ride. \n\n\n\n\nWether..\n\n\ntemp.\n\n\nprecipitation\n\n\nday\n\n\nclothes\n\n\n\n\n\n\n\n\nMemorize vs New Data\n\n\n\n\n\n\n\n\nTemp\n\n\nPrecip\n\n\nDay\n\n\nClothes\n\n\n\n\n\n\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n-5\n\n\nSnow\n\n\nMon\n\n\nCasual\n\n\nDrive\n\n\n\n\n\n\n15\n\n\nSnow\n\n\nMon\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n-5\n\n\nSnow\n\n\nMon\n\n\nCasual\n\n\n?\n\n\n\n\n\n\n\n\nNoisy Data\n\n\n\n\n\n\n\n\nTemp\n\n\nPrecip\n\n\nDay\n\n\nClothes\n\n\n\n\n\n\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nDrive\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nDrive\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\nWalk\n\n\n\n\n\n\n25\n\n\nNone\n\n\nSat\n\n\nCasual\n\n\n?\n\n\n\n\n\n\n\n\nAverage the data when it's noisy data\n\n\nHow can we build a model?\n\n\n\n\nDecision Tree\n\n\nPredict by splitting on attribute values\n\n\nID3\n\n\nNormal procedure: top down in a recursive \ndivide-and-conquer\n fashion\n\n\nProcess Stops\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAI Experience (withGoogle)\n\n\n\n\nConstructing decision trees (ID3)\n\n\nNormalprocedure:topdowninarecursivedivide-and- conquer fashion\n\n\nFirst: an attribute is selected for the root node and a branch is created for each possible attribute value\n\n\nThen: the instances are split into subsets (one for each branch extending from the node)\n\n\nFinally: the same procedure is repeated for each branch, using only instances that reach the branch\n\n\n\n\n\n\nProcessstopsifallinstanceshavethesameclass   \n\n\n\n\n\n\n\n\nAttribution Selection:\n\n\n\n\nHeuristic: Choose the attribute that produces the \"purest\" nodes\n\n\nEntropy of Nodes: Lower the entropy, purer the node\n\n\n\n\nMeasuring Purity with Entropy:\n\n\n\n\nAmount of Information\n\n\nHigher -\n messier the group\n\n\nLower -\n purer the group\n\n\n\n\n\n\n\n\n\n\nBonus:\n\n\nTrump's Twitter: \n\n\n\n\niPhone Entries (Staff) vs Android Entries (Trump)", 
            "title": "10 Artificial Intelligence & Data Mining"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#lecture-15-february-8th-2017", 
            "text": "", 
            "title": "Lecture 15 - February 8th, 2017"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#artificial-intelligence-and-data-mining", 
            "text": "Something Fun  quickdraw.withgoogle.com/", 
            "title": "Artificial Intelligence and Data Mining"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#social-media-data", 
            "text": "2 million emails per second  500 million tweets on twitter a day  500 million new videos viewed to youtube a minute.", 
            "title": "Social Media Data"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#scientific-data", 
            "text": "Data collected and stored at enormous speeds (GB/hour)  remote sensors on a satellite     Other Data Sources?", 
            "title": "Scientific Data"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#need-for-data-mining", 
            "text": "Human Analysts: Too much work  Data Mining: automatically discover useful information   Example:   Predict if an email is spam or not  Train a model  Show the computer a bunch of emails, some of which are spam, some of which are not  Tell the computer which words appear in each email  Computer learns words that tend to appear with spam emails, or with not-spam emails.    Test the model  Show the computer a new email  Check if the computer predicts the right class", 
            "title": "Need for Data Mining"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#predictive-data-mining-or-supervised-learning", 
            "text": "Learning  We can think of at least three different problems....  Ex.  Imagine I'm trying predict wether my neighbour is going to drive into work, so I can ask for a ride.    Wether..  temp.  precipitation  day  clothes     Memorize vs New Data     Temp  Precip  Day  Clothes       25  None  Sat  Casual  Walk    -5  Snow  Mon  Casual  Drive    15  Snow  Mon  Casual  Walk    -5  Snow  Mon  Casual  ?", 
            "title": "Predictive Data Mining or Supervised learning"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#noisy-data", 
            "text": "Temp  Precip  Day  Clothes       25  None  Sat  Casual  Walk    25  None  Sat  Casual  Walk    25  None  Sat  Casual  Drive    25  None  Sat  Casual  Drive    25  None  Sat  Casual  Walk    25  None  Sat  Casual  Walk    25  None  Sat  Casual  Walk    25  None  Sat  Casual  ?     Average the data when it's noisy data", 
            "title": "Noisy Data"
        }, 
        {
            "location": "/A)-Lecture/10-Artificial-Intelligence-&-Data-Mining/#how-can-we-build-a-model", 
            "text": "Decision Tree  Predict by splitting on attribute values  ID3  Normal procedure: top down in a recursive  divide-and-conquer  fashion  Process Stops        AI Experience (withGoogle)   Constructing decision trees (ID3)  Normalprocedure:topdowninarecursivedivide-and- conquer fashion  First: an attribute is selected for the root node and a branch is created for each possible attribute value  Then: the instances are split into subsets (one for each branch extending from the node)  Finally: the same procedure is repeated for each branch, using only instances that reach the branch    Processstopsifallinstanceshavethesameclass        Attribution Selection:   Heuristic: Choose the attribute that produces the \"purest\" nodes  Entropy of Nodes: Lower the entropy, purer the node   Measuring Purity with Entropy:   Amount of Information  Higher -  messier the group  Lower -  purer the group      Bonus:  Trump's Twitter:    iPhone Entries (Staff) vs Android Entries (Trump)", 
            "title": "How can we build a model?"
        }, 
        {
            "location": "/A)-Lecture/11-The-Reading-Brain/", 
            "text": "Lecture 16 - February 10th, 2017\n\n\nMy research question: \n\n\nHow doees the brain encode (represent) the meaning of words? How does it combine word meaning to represent more complex concepts?\n\n\nSiri and the Long tail:\n\n\n \n\n\nOutline\n\n\n\n\nBrain imaging\n\n\nWord meaning in the brain \n\n\nWords in context\n\n\n\n\nBrain imaging technology:\n\n\n\n\nFunctional Magnetic Resonance Imaging (fMRI)\n\n\nMeasuers changes in blood oxygenation (BOLD)\n\n\nGood spatial resolution\n\n\nPoor time resolution\n\n\n\n\n\n\n\n\n\n\nMEG  \n\n\nMagnetoecephalography (magnet / brain / graph)\n\n\nMagneted sheeted room -\n because earth\n\n\n102 sensor position\n\n\n3 sensors / position\n\n\nPoorer spatial resolution than fMRI\n\n\nGreat time resolution\n\n\nGreat for language studies\n\n\n\n\n\n\n\n\n\n\n\n\nMeaning in the brain:\n\n\n\n\nWhat would it mean to have a model of meaning representation in the brain?\n\n\nWhich brain areas acKvate for parKcular words\n\n\nPredict the word a person is reading from their brain acKvaKon\n\n\n\n\n\n\n\n\n\n\n\n\nHow to build a model?\n\n\nShow a computer algorithm many examples.\nTraining\nFind Patterns\nTest\n\nPredict unseen words\nFind Patterns\n\nYou can't build model for every word\n    Solution: Word Features (eg. edible, alive)\n\n\n\n\n\nEx. The Brain Data\n\n\n\n\n9 subjects fMRI , 9 subjecy MEG\n\n\n60 concrete noun w/ pictures\n\n\n\n\nWord Features\n\n\nCo-occurence with verbs: (MRI)\n\n\n\n\nAccuracy: 77%\n\n\n\n\n\n\n20 Questions: (MEG)\n \n\n\n\n\nArray of numbers = Identifier of the Word\n\n\n\n\n\n\n\n\nVisual Features (Of the Word and the Image)\n\n\nPosterior Regions \n\n\nDetected in 150ms-250ms\n\n\n\n\n\n\n\n\n\n\nWord Meaning\n\n\nDistrubuted throughout the brain \n\n\nDetected in 200-600ms", 
            "title": "11 The Reading Brain"
        }, 
        {
            "location": "/A)-Lecture/11-The-Reading-Brain/#lecture-16-february-10th-2017", 
            "text": "My research question:   How doees the brain encode (represent) the meaning of words? How does it combine word meaning to represent more complex concepts?  Siri and the Long tail:", 
            "title": "Lecture 16 - February 10th, 2017"
        }, 
        {
            "location": "/A)-Lecture/11-The-Reading-Brain/#outline", 
            "text": "Brain imaging  Word meaning in the brain   Words in context   Brain imaging technology:   Functional Magnetic Resonance Imaging (fMRI)  Measuers changes in blood oxygenation (BOLD)  Good spatial resolution  Poor time resolution      MEG    Magnetoecephalography (magnet / brain / graph)  Magneted sheeted room -  because earth  102 sensor position  3 sensors / position  Poorer spatial resolution than fMRI  Great time resolution  Great for language studies       Meaning in the brain:   What would it mean to have a model of meaning representation in the brain?  Which brain areas acKvate for parKcular words  Predict the word a person is reading from their brain acKvaKon       How to build a model?  Show a computer algorithm many examples.\nTraining\nFind Patterns\nTest\n\nPredict unseen words\nFind Patterns\n\nYou can't build model for every word\n    Solution: Word Features (eg. edible, alive)   Ex. The Brain Data   9 subjects fMRI , 9 subjecy MEG  60 concrete noun w/ pictures   Word Features  Co-occurence with verbs: (MRI)   Accuracy: 77%    20 Questions: (MEG)     Array of numbers = Identifier of the Word     Visual Features (Of the Word and the Image)  Posterior Regions   Detected in 150ms-250ms      Word Meaning  Distrubuted throughout the brain   Detected in 200-600ms", 
            "title": "Outline"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/", 
            "text": "Databases and Pseudocode\n\n\nLecture 2 - January 6th, 2017\n\n\n\n\nMotivating Example:\n\n\nCSC 106 - Keeping Records of Grades\n\n\nGoal: How to work with this Data\n\n\n\n\n\n\nPseudocode -\n Logic writing on your code.\n\n\nAlgorithm -\n Sets of steps\n\n\n\n\n\n\nTable 1: \n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n101\n\n\nJoe Smith\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n80\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n145\n\n\nAl Green\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n66\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n\n\nSolution For:\n The above question\n\n\ntotal = 0\ncount = 0\ni = 1\n\nwhile i =\n total # rows in table\n    total = total + grade in row i\n    count = count + 1\n    i = i + 1\n\naverage = total / count\n\n\n\n\nSolution For:\n Keeping track of grades for a specific teacher\n\n\ntotal = 0\ncount = 0 \ni = 1\n\nwhile i =\n total # rows in table\n    if prof-name of row i = Turing\n        total = toal + grade in row i\n        count = count + 1\n    i = i + 1\n\naverage = total / count\n\n\n\n\nSolution For:\n Inserting a new grade in the table\n\n\nBefore:\n\n\ni = # rows in table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\ncourse_name for row i = CSC 106 (Too much info)\nCRN for row i = 23456\nprof-name for row i = Turing (Too much info - CRN is all mighty)\ngrade for row i = 91\n\n\n\n\nAfter:\n\n\ni = # rows in grades table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\nCRN for row i = 23456\ngrade for row i = 91\n\n\n\n\n\n\nNOTE:\n The question now has two tables to work with instead of one.\n\n\nTable 1: Courses\n\n\n\n\n\n\n\n\ncourse\n\n\ncrn\n\n\nprof_name\n\n\n\n\n\n\n\n\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n\n\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n\n\n\n\n\n\nTable 2: Grades\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncrn\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n101\n\n\nJoe Smith\n\n\n23456\n\n\n80\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\n23456\n\n\n45\n\n\n\n\n\n\n145\n\n\nAl Green\n\n\n23456\n\n\n66\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\n23457\n\n\n79\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\n23457\n\n\n83\n\n\n\n\n\n\n\n\n\n\nSolution For:\n Calculating the average for students in class with CRN 23457\n\n\ntotal = 0\ncount = 0\ni = 1\n\nwhile i =\n total # of rows in grades tables\n    if crn in row i is 23457\n        total = total + grade in row i\n        count = count + 1\n    i + i + 1\naverage = total / count\n\n\n\n\nSolution For:\n Calculating a better average\n\n\nif  count = 0 \n    average = 0\nelse \n    average = total/count\n\n\n\n\nSolution For:\n Table Case: Inserting a new grade into two tables\n\n\nif input crn is not in classes table \n    return error\nelse \n    stud_id for row i = 313\n    stud_name = Steve Cook\n    crn = 23456\n    grade = 91\n\n\n\n\nSolution For:\n Calculating the average grade for classes that Turing teaches\n\n\ntotal = 0 \ncount = 0\nj = 1 (Index into classes table)\n\nwhile j =\n # rows in classes table \n    if row j of classes tables has prof_name = Turing\n        my_crn = crn in j of classes table\n\n        i = 1\n        while i =\n #rows in grades table\n            if crn for row i of grades table  = my_crn\n                table = total + grade in row i of grades table\n                count = count + 1\n            i = i + 1\n    j = j + 1\n\n\n\n\nLecture 3 - January 10th, 2017\n\n\nTrace Through Code\n\n\nCode:\n\n\nStep1 - total=0\nStep2 - count=0\nStep3 - i=1\nStep4 - while i \n= # rows in table, repeat steps 5 through 8\nStep5 -     if prof_name of row i equals Turing, do line 6 and 7 \nStep6 -         total = total + grade in row i\nStep7 -         count = count + 1\nStep8 -     i=i+1\nStep9 - average = total / count\n\n\n\n\nTable 1:\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n342\n\n\nPatricia Dune\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n94\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n\n\nSolution:\n\n\n#rows = 4\n\ntotal=0\ncount=0\ni=1\n--\ntotal=45\ncount=1\n1=2\n--\ni=3\n--\ntotal=139\ncount=2\ni=4\n--\ni=5\n-- \nAverage = 139/2 = 69.5\n\n\n\n\nWrite pseudocode that calculates the maximum grade for a student in class with crn = 23456\n\n\nTrace Through Code\n\n\nCode:\n\n\nStep1 - max=-1\nStep2 - i=1\nStep3 - while i \n= # rows in table, repeat steps 4 through 7\nStep4 -     if crn of row i equals 23456, do line 5 and 6 \nStep5 -         if max \n grade in row i do line 6\nStep6 -             max = grade in row i \nStep7 -     i=i+1\n\n\n\n\nTable:\n\n\n\n\n\n\n\n\nstud_id\n\n\nstud_name\n\n\ncourse_name\n\n\ncrn\n\n\nprof_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\n111\n\n\nJohn Jackson\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n45\n\n\n\n\n\n\n200\n\n\nJane McKenzie\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n83\n\n\n\n\n\n\n342\n\n\nPatricia Dune\n\n\nCSC 106\n\n\n23456\n\n\nTuring\n\n\n94\n\n\n\n\n\n\n301\n\n\nMeg Lyon\n\n\nCSC 106\n\n\n23457\n\n\nJobs\n\n\n79\n\n\n\n\n\n\n\n\nSolution:\n \n\n\nmax=-1\ni=1\n--\nmax=45\ni=2\n--\ni=3\n--\nmax=94\ni=4\n--\ni=5\n\n\n\n\nSQL\n\n\nSql is a structured query language.\n\n\nDatabase\n\n\nA database is a collection of tables.\n\n\nInstall SqLite3\n\n\nbrew install sqlite\n\n\n\n\nStart by making a blank table:\n\n\ncreate table grades( stud_id int, stud_name text, course_name text, crn int, prof_name text, grade int);\n\n\n\n\nNote:\n Order of values must match the order of the columns when you created the table.\n\n\nQuery\n\n\nA query is a select statement that tells the computer what columms the result should have. \n\n\nEx.\n\n\nSelect stud_name, grade \nfrom grades;\n\n\n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\nname\n\n\n56\n\n\n\n\n\n\nname\n\n\n78\n\n\n\n\n\n\n\n\nEx. \n\n\nSelect avg(grade)\nFrom grades;\n\n\n\n\nReturns --\n Table 1: Average\n\n\n| \navg(grade)\n |\n| ------------:|\n| 72.8         |\n\n\nEx.\n\n\nselect max(grade)\nfrom grades;\n\n\n\n\nReturns --\n Table 1: Max\n\n\n| \nmax\n |\n| :----:|\n| 94    |\n\n\nEx.\n\n\nSelect stud_name, grade, crn \nfrom grades\nwhere crn = 23456;\n\n\n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\ncrn\n\n\n\n\n\n\n\n\n\n\nJoe Smith\n\n\n80\n\n\n23456\n\n\n\n\n\n\nJohn Jacks\n\n\n45\n\n\n23456\n\n\n\n\n\n\nAl Green\n\n\n66\n\n\n23456\n\n\n\n\n\n\nGreg Black\n\n\n60\n\n\n23456\n\n\n\n\n\n\nPatricia D\n\n\n94\n\n\n23456\n\n\n\n\n\n\n\n\nEx. \n\n\nSelect stud_name, grade \nfrom grades\nwhere prof_name = \u201cJobs\u201d;\n\n\n\n\nNote:\n text must be surrended by quotes. \n\n\nReturns --\n Table 1: Grades\n\n\n\n\n\n\n\n\nstud_name\n\n\ngrade\n\n\n\n\n\n\n\n\n\n\nMeg Lyon\n\n\n79\n\n\n\n\n\n\nJane McKen\n\n\n83\n\n\n\n\n\n\nRichard Fe\n\n\n70\n\n\n\n\n\n\nPaul Shelb\n\n\n66\n\n\n\n\n\n\nJohn Jacks\n\n\n85\n\n\n\n\n\n\n\n\n\n\nYou should know\n\n\n\n\nHow to step through pseudocode\n\n\nHow to write some simple SQL queries using: \u2013  avg, max, where\n\n\n\n\nLecture 4 - January 11th, 2017\n\n\nSelect *\n is shorthand for \u201cselect all of the columns of the table\u201d. \n\n\n*\n can be viewed as a wild card. \n\n\nselect * from grades where crn = 23456 and grade \n 50;\n\n\nselect count(*)\n will return the number of rows returned. (Important for assignment 1). \n\n\nselect * from grades order by stud_name;\n will order the entries.\n\n\nselect * from grades order by grade desc;\n will sort by descending order.\n\n\nQuestion:\n Create a list of student names for Turing\u2019s class, ordered by name?\n\n\nselect stud_name from grades where prof_name = Turing order by stud_name;\n\n\nYou should know\n\n\n\n\nHow to step through pseudocode\n\n\nHow to write some simple SQL queries using:\n\n\navg\n\n\nmax\n\n\nwhere\n\n\nselect * \n\n\nselect count(*)\n\n\norder by\n\n\n\n\n\n\n\n\nMore Pseudocode Practice\n\n\nQuestion:\n  Write a query to print phone number of a person if it exists in the table\n\n\ninput: name_in\n holds the name we look for\n\n\n\n\n\n\n\n\nname\n\n\nnumber\n\n\n\n\n\n\n\n\n\n\nJoe\n\n\n472-5700\n\n\n\n\n\n\nLeo\n\n\n472-5702\n\n\n\n\n\n\nSara\n\n\n472-5701\n\n\n\n\n\n\n\n\nStep1 i=1\nStep2 found=NO\nStep3 while i =\n #rows in table do Step4-7\nStep4   if name in row i is name_in do Step5\n6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print \nno such person in directory.\n\n\n\n\n\nInefficiency, if you find the name and it's the first one in the table, the while loop will still run. \n\n\nStep1 i=1\nStep2 found=NO\nStep3 while i =\n #rows in table AND found = NO do Step4-7\nStep4   if name in row i is name_in do Step5\n6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print \nno such person in directory.\n\n\n\n\n\nExecution: \n\n\nname_in = \nLeo\n\ni=1\nfound = NO\nrows# = 3\n--\ni = 2\n--\n472-5702\nfound = YES\n\ni = 3\n--\nExit while loop\n\n\n\n\nselect number from phone_numbers where name = \"Leo\";\n - will be the query.\n\n\nCollatz Conjecture\n\n\n\n\nPick a number.\n\n\nIf it\u2019s even, divide by two \n\n\nIf odd multiply by three and add one \n\n\n\n\n\n\nRepeat\n\n\nStop if the number is 1\n\n\n\n\nQuestion:\n Write this in Pseudocode \n\n\nBonus: Of Interest\n\n\n\n\nNo one knows if there\u2019s a number for which the collatz conjecture will not terminate\n\n\nHas been checked for all numbers up to 260 \u2013  All of which do terminate at 1\n\n\n\n\ninpurt num+in (number to test)\nif num_in \n 1\n    print \nerror, bad number\n Exit \n\ncur_num = num_in\n    while cur_num is not 1\n        if cur_num is even do \n            divide by 2\n        else if cur_num is odd do \n            cur_num X 3 + 1\n\n\n\n\nnum_in = 4\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop\n--\nnum_in = 5\ncur_num = 5\n\ncur_num = 16\n\ncur_num = 8\n\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop", 
            "title": "2 Databases"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#databases-and-pseudocode", 
            "text": "", 
            "title": "Databases and Pseudocode"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-2-january-6th-2017", 
            "text": "Motivating Example:  CSC 106 - Keeping Records of Grades  Goal: How to work with this Data    Pseudocode -  Logic writing on your code.  Algorithm -  Sets of steps    Table 1:      stud_id  stud_name  course_name  crn  prof_name  grade      101  Joe Smith  CSC 106  23456  Turing  80    111  John Jackson  CSC 106  23456  Turing  45    145  Al Green  CSC 106  23456  Turing  66    301  Meg Lyon  CSC 106  23457  Jobs  79    200  Jane McKenzie  CSC 106  23457  Jobs  83     Solution For:  The above question  total = 0\ncount = 0\ni = 1\n\nwhile i =  total # rows in table\n    total = total + grade in row i\n    count = count + 1\n    i = i + 1\n\naverage = total / count  Solution For:  Keeping track of grades for a specific teacher  total = 0\ncount = 0 \ni = 1\n\nwhile i =  total # rows in table\n    if prof-name of row i = Turing\n        total = toal + grade in row i\n        count = count + 1\n    i = i + 1\n\naverage = total / count  Solution For:  Inserting a new grade in the table  Before:  i = # rows in table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\ncourse_name for row i = CSC 106 (Too much info)\nCRN for row i = 23456\nprof-name for row i = Turing (Too much info - CRN is all mighty)\ngrade for row i = 91  After:  i = # rows in grades table + 1\n\nstud_id for row i = 313\nstud_name for row i = Steve Cook\nCRN for row i = 23456\ngrade for row i = 91   NOTE:  The question now has two tables to work with instead of one.  Table 1: Courses     course  crn  prof_name      CSC 106  23456  Turing    CSC 106  23457  Jobs     Table 2: Grades     stud_id  stud_name  crn  grade      101  Joe Smith  23456  80    111  John Jackson  23456  45    145  Al Green  23456  66    301  Meg Lyon  23457  79    200  Jane McKenzie  23457  83      Solution For:  Calculating the average for students in class with CRN 23457  total = 0\ncount = 0\ni = 1\n\nwhile i =  total # of rows in grades tables\n    if crn in row i is 23457\n        total = total + grade in row i\n        count = count + 1\n    i + i + 1\naverage = total / count  Solution For:  Calculating a better average  if  count = 0 \n    average = 0\nelse \n    average = total/count  Solution For:  Table Case: Inserting a new grade into two tables  if input crn is not in classes table \n    return error\nelse \n    stud_id for row i = 313\n    stud_name = Steve Cook\n    crn = 23456\n    grade = 91  Solution For:  Calculating the average grade for classes that Turing teaches  total = 0 \ncount = 0\nj = 1 (Index into classes table)\n\nwhile j =  # rows in classes table \n    if row j of classes tables has prof_name = Turing\n        my_crn = crn in j of classes table\n\n        i = 1\n        while i =  #rows in grades table\n            if crn for row i of grades table  = my_crn\n                table = total + grade in row i of grades table\n                count = count + 1\n            i = i + 1\n    j = j + 1", 
            "title": "Lecture 2 - January 6th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-3-january-10th-2017", 
            "text": "", 
            "title": "Lecture 3 - January 10th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#trace-through-code", 
            "text": "Code:  Step1 - total=0\nStep2 - count=0\nStep3 - i=1\nStep4 - while i  = # rows in table, repeat steps 5 through 8\nStep5 -     if prof_name of row i equals Turing, do line 6 and 7 \nStep6 -         total = total + grade in row i\nStep7 -         count = count + 1\nStep8 -     i=i+1\nStep9 - average = total / count  Table 1:     stud_id  stud_name  course_name  crn  prof_name  grade      111  John Jackson  CSC 106  23456  Turing  45    200  Jane McKenzie  CSC 106  23457  Jobs  83    342  Patricia Dune  CSC 106  23456  Turing  94    301  Meg Lyon  CSC 106  23457  Jobs  79     Solution:  #rows = 4\n\ntotal=0\ncount=0\ni=1\n--\ntotal=45\ncount=1\n1=2\n--\ni=3\n--\ntotal=139\ncount=2\ni=4\n--\ni=5\n-- \nAverage = 139/2 = 69.5", 
            "title": "Trace Through Code"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#write-pseudocode-that-calculates-the-maximum-grade-for-a-student-in-class-with-crn-23456", 
            "text": "", 
            "title": "Write pseudocode that calculates the maximum grade for a student in class with crn = 23456"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#trace-through-code_1", 
            "text": "Code:  Step1 - max=-1\nStep2 - i=1\nStep3 - while i  = # rows in table, repeat steps 4 through 7\nStep4 -     if crn of row i equals 23456, do line 5 and 6 \nStep5 -         if max   grade in row i do line 6\nStep6 -             max = grade in row i \nStep7 -     i=i+1  Table:     stud_id  stud_name  course_name  crn  prof_name  grade      111  John Jackson  CSC 106  23456  Turing  45    200  Jane McKenzie  CSC 106  23457  Jobs  83    342  Patricia Dune  CSC 106  23456  Turing  94    301  Meg Lyon  CSC 106  23457  Jobs  79     Solution:    max=-1\ni=1\n--\nmax=45\ni=2\n--\ni=3\n--\nmax=94\ni=4\n--\ni=5", 
            "title": "Trace Through Code"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#sql", 
            "text": "Sql is a structured query language.", 
            "title": "SQL"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#database", 
            "text": "A database is a collection of tables.  Install SqLite3  brew install sqlite  Start by making a blank table:  create table grades( stud_id int, stud_name text, course_name text, crn int, prof_name text, grade int);  Note:  Order of values must match the order of the columns when you created the table.", 
            "title": "Database"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#query", 
            "text": "A query is a select statement that tells the computer what columms the result should have.   Ex.  Select stud_name, grade \nfrom grades;  Returns --  Table 1: Grades     stud_name  grade      name  56    name  78     Ex.   Select avg(grade)\nFrom grades;  Returns --  Table 1: Average  |  avg(grade)  |\n| ------------:|\n| 72.8         |  Ex.  select max(grade)\nfrom grades;  Returns --  Table 1: Max  |  max  |\n| :----:|\n| 94    |  Ex.  Select stud_name, grade, crn \nfrom grades\nwhere crn = 23456;  Returns --  Table 1: Grades     stud_name  grade  crn      Joe Smith  80  23456    John Jacks  45  23456    Al Green  66  23456    Greg Black  60  23456    Patricia D  94  23456     Ex.   Select stud_name, grade \nfrom grades\nwhere prof_name = \u201cJobs\u201d;  Note:  text must be surrended by quotes.   Returns --  Table 1: Grades     stud_name  grade      Meg Lyon  79    Jane McKen  83    Richard Fe  70    Paul Shelb  66    John Jacks  85", 
            "title": "Query"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#you-should-know", 
            "text": "How to step through pseudocode  How to write some simple SQL queries using: \u2013  avg, max, where", 
            "title": "You should know"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#lecture-4-january-11th-2017", 
            "text": "Select *  is shorthand for \u201cselect all of the columns of the table\u201d.   *  can be viewed as a wild card.   select * from grades where crn = 23456 and grade   50;  select count(*)  will return the number of rows returned. (Important for assignment 1).   select * from grades order by stud_name;  will order the entries.  select * from grades order by grade desc;  will sort by descending order.  Question:  Create a list of student names for Turing\u2019s class, ordered by name?  select stud_name from grades where prof_name = Turing order by stud_name;", 
            "title": "Lecture 4 - January 11th, 2017"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#you-should-know_1", 
            "text": "How to step through pseudocode  How to write some simple SQL queries using:  avg  max  where  select *   select count(*)  order by", 
            "title": "You should know"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#more-pseudocode-practice", 
            "text": "Question:   Write a query to print phone number of a person if it exists in the table  input: name_in  holds the name we look for     name  number      Joe  472-5700    Leo  472-5702    Sara  472-5701     Step1 i=1\nStep2 found=NO\nStep3 while i =  #rows in table do Step4-7\nStep4   if name in row i is name_in do Step5 6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print  no such person in directory.   Inefficiency, if you find the name and it's the first one in the table, the while loop will still run.   Step1 i=1\nStep2 found=NO\nStep3 while i =  #rows in table AND found = NO do Step4-7\nStep4   if name in row i is name_in do Step5 6\nStep5       print number in row i\nStep6       found=YES\nStep7   i= i+1\nStep8 if found = NO do Step9\nStep9   print  no such person in directory.   Execution:   name_in =  Leo \ni=1\nfound = NO\nrows# = 3\n--\ni = 2\n--\n472-5702\nfound = YES\n\ni = 3\n--\nExit while loop  select number from phone_numbers where name = \"Leo\";  - will be the query.", 
            "title": "More Pseudocode Practice"
        }, 
        {
            "location": "/A)-Lecture/2-Databases/#collatz-conjecture", 
            "text": "Pick a number.  If it\u2019s even, divide by two   If odd multiply by three and add one     Repeat  Stop if the number is 1   Question:  Write this in Pseudocode   Bonus: Of Interest   No one knows if there\u2019s a number for which the collatz conjecture will not terminate  Has been checked for all numbers up to 260 \u2013  All of which do terminate at 1   inpurt num+in (number to test)\nif num_in   1\n    print  error, bad number  Exit \n\ncur_num = num_in\n    while cur_num is not 1\n        if cur_num is even do \n            divide by 2\n        else if cur_num is odd do \n            cur_num X 3 + 1  num_in = 4\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop\n--\nnum_in = 5\ncur_num = 5\n\ncur_num = 16\n\ncur_num = 8\n\ncur_num = 4\n\ncur_num = 2\n\ncur_num = 1\n\nExit while loop", 
            "title": "Collatz Conjecture"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/", 
            "text": "Flowcharts\n\n\nLecture 5 - January 13th, 2017\n\n\nNotes provide by a kind classmate :D\n\n\nAlgorithms and Flowcharts\n\n\n\n\nRectangle -\n Process \n\n\nRhombus -\n Data (Input or Output)\n\n\nDiamond -\n Decision \n\n\nRounded Rectanlge -\n Start and Stop\n\n\n\n\nEx.\n Making a flowchart for collatz conjecture \n\n\n\n\nEx.\n A flowchart to calculate avg. of grades of student of Turing\n\n\n\n\nEx.\n To print a phone number corresponding to given name or else print \"no such name\"\n\n\n\n\nLecture 6 - January 17th, 2017\n\n\nModulo:\n The remainder after dividing. \n\n\nQuestion:\n Determine if a year is a leap year\n\n\nStep1   Input integer year\nStep2   if year modulo 4 is 0 do Step3-9\nStep3       if year modulo 100 is 0 do Step4-7\nStep4           if year modulo 400 is 0 do Step5\nStep5               is_leap_year=True\nStep6           else do Step7\nStep7               is_leap_year=False\nStep8       else do Step9\nStep9           is_leap_year=True\nStep10   else do Step11\nStep11      is_year_leap=False\nStep12   return is_leap_year", 
            "title": "3 Flowcharts"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#flowcharts", 
            "text": "", 
            "title": "Flowcharts"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#lecture-5-january-13th-2017", 
            "text": "Notes provide by a kind classmate :D", 
            "title": "Lecture 5 - January 13th, 2017"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#algorithms-and-flowcharts", 
            "text": "Rectangle -  Process   Rhombus -  Data (Input or Output)  Diamond -  Decision   Rounded Rectanlge -  Start and Stop   Ex.  Making a flowchart for collatz conjecture    Ex.  A flowchart to calculate avg. of grades of student of Turing   Ex.  To print a phone number corresponding to given name or else print \"no such name\"", 
            "title": "Algorithms and Flowcharts"
        }, 
        {
            "location": "/A)-Lecture/3-Flowcharts/#lecture-6-january-17th-2017", 
            "text": "Modulo:  The remainder after dividing.   Question:  Determine if a year is a leap year  Step1   Input integer year\nStep2   if year modulo 4 is 0 do Step3-9\nStep3       if year modulo 100 is 0 do Step4-7\nStep4           if year modulo 400 is 0 do Step5\nStep5               is_leap_year=True\nStep6           else do Step7\nStep7               is_leap_year=False\nStep8       else do Step9\nStep9           is_leap_year=True\nStep10   else do Step11\nStep11      is_year_leap=False\nStep12   return is_leap_year", 
            "title": "Lecture 6 - January 17th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/", 
            "text": "Binary / Hex / 2s Complement\n\n\nLecture 6 - January 17th, 2017\n\n\nWhy Binary?\n\n\n\n\nBinary is how computers talk\n\n\nto themselves \nAND\n\n\nto each other\n\n\n\n\n\n\n\n\nDecimal Numbers\n\n\nA binary abacus\n -\n \nExample\n\n\nQuestion:\n 101 is 5 in binary\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n\n\n\n\n2^2\n\n\n2^1\n\n\n2^0\n\n\n\n\n\n\n\n\n1x2^2 + 0x2^1 + 1x2^0\n\n1x4 + 0x2 + 1x1 = 5\n\n\n\n\n\n\nNOTE:\n Test Material\n\n\nQuestion:\n What is 11111 in decimal number?\n\n\nAnswer: 31\n\n\nQuestion:\n What is the highest number you can encode with n bits?\n\n\nAnswer: 2^n -1\n\n\nEncode Numbers\n\n\nNote:\n If the decimal number is a perfect power of two, it will be easy to find, but if it's not you have \ntwo methods\n. \n\n\nMethod 1\n\n\n5 = 4 + 1\n\nSo 2^2 and 2^0\n\nSo 00101 = 5\n\n\n\n\nMethod 2\n\n\nStep1   input: number_in cur_number = number_in binary_string = \u201c\u201d\nStep2   while cur_number \n= 2\nStep3       my_encoding = input%2\nStep4       add my_encoding to leW side of binary string \nStep5       cur_number = round_down(cur_number/2)\nStep6   add cur_number to leW side of binary string\n\n\n\n\nQuestion:\n What is 11 in binary?\n\n\nnum_in = 11\n\nbinary_string=\n\n11%2 = 1\n\nbinary_string=\n1\n\n\n11/2 = 5.5 -\n 5\n5%2 = 1\n\nbinary_string=\n11\n\n\n5/2 = 2.5 -\n 2\n2%2 = 0\n\nbinary_string=\n011\n\n\n2/2 = 1\n\nbinary_string=\n1011\n\n\n\n\n\nQuestion:\n What is 8 in binary?  \n\n\nnum_in = 8 \n\nbinary_string=\n\n8%2 = 0\n\nbinary_string=\n0\n\n\n8/2 = 4\n4%2 = 0\n\nbinary_string=\n00\n\n\n4/2 = 2\n2%2 = 0\n\nbinary_string=\n000\n\n\n2/1 = 1\n\nbinary_string=\n1000\n\n\n\n\n\nNOTE:\n Practice on your own. \n\n\nLecture 7 - January 18th, 2017\n\n\nHelper: Question 2 - Assignment 1 \n\n\n\n\nInput for this program is a list of numbers. \n\n\nPseudo code for addition. \n\n\n\n\na(m-1), a(m-2), a(1), a(0)\n\n\n\n\n\n\n\n\n\n\n4\n\n\n3\n\n\n7\n\n\n\n\n\n\n\n\n\n\na(m-1)\n\n\na(m-2)\n\n\na(0)\n\n\n\n\n\n\n\n\nAnswer: m=3\n\n\n\n\n\n\n\n\n3\n\n\n2\n\n\n9\n\n\n\n\n\n\n\n\n\n\nb(2)\n\n\nb(1)\n\n\nb(0)\n\n\n\n\n\n\n\n\n437+329=766\n\n\n\n\nDraw a flow chart\n\n\n\n\nUse draw.io\n\n\nExport as an image\n\n\nHand in PDF\n\n\n\n\nBinary Numbers\n\n\n10110 = 22\n01001 = 9\n\n\n\n\nTip:\n If it ends with a 1 it is odd. If it ends in a 0 it is even.\n\n\n8 -\n 01000\n5 -\n 00101\n\n\nAlgorithm Decimal Number - Binary.\n\n\nEx. Binary Conversion\n\n\nbinary_string=\n\n\n23%2 = 1\n\nbinary_string=1\n\n23/2 = 11.5 -\n 11\n11%2 = 1\n\nbinary_string=11\n\n11/2 = 5.5 \n 5\n5%2=1\n\nbinary_string=111\n\n5/2=2.5 -\n 2\n2%2=0\n\nbinary_string=0111\n\n2/2 = 1\n\nbinary_string=10111\n\n\n\n\nNote:\n If a question ask for 5 bit number, you must include 5 places.\n\n\nAdding Binary Numbers\n\n\nEx. 00111+00001=01000\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\n1\n\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\nBonus: 00111+00111=01110\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\nEncoding Negative Numbers\n\n\n\n\nEncode the positive number\n\n\nFlip all the bits (1-\n0 and 0-\n1)\n\n\nAdd 1 to the new bit string\n\n\n\n\nQuestion:\n Convert -9 into binary\n\n\n01001\n10110\n10111\n\n\n\n\nQuestion:\n Convert 12 into binary\n\n\n01100\n10011\n10100\n\n\n\n\nTwo's complement number\n\n\nNOTE:\n Unsigned Binary Number or a Two's Complement Number. \n\n\nIgnore overflow that carries in Two's compliment\n\n\nConvert Two's complement into decimal\n\n\n\n\nIf negative: \n\n\nFlip a bit and add one\n\n\nPut the negative back at the end\n\n\n\n\n\n\nIf positive: \n\n\nNormal Conversion\n\n\n\n\n\n\n\n\nLecture 8 - January 20th, 2017\n\n\nNotes Missing\n\n\nContribute your notes \nhere\n!", 
            "title": "4 Number Systems"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#binary-hex-2s-complement", 
            "text": "", 
            "title": "Binary / Hex / 2s Complement"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-6-january-17th-2017", 
            "text": "", 
            "title": "Lecture 6 - January 17th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#why-binary", 
            "text": "Binary is how computers talk  to themselves  AND  to each other", 
            "title": "Why Binary?"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#decimal-numbers", 
            "text": "A binary abacus  -   Example  Question:  101 is 5 in binary     1  0  1      2^2  2^1  2^0     1x2^2 + 0x2^1 + 1x2^0\n\n1x4 + 0x2 + 1x1 = 5   NOTE:  Test Material  Question:  What is 11111 in decimal number?  Answer: 31  Question:  What is the highest number you can encode with n bits?  Answer: 2^n -1", 
            "title": "Decimal Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#encode-numbers", 
            "text": "Note:  If the decimal number is a perfect power of two, it will be easy to find, but if it's not you have  two methods .   Method 1  5 = 4 + 1\n\nSo 2^2 and 2^0\n\nSo 00101 = 5  Method 2  Step1   input: number_in cur_number = number_in binary_string = \u201c\u201d\nStep2   while cur_number  = 2\nStep3       my_encoding = input%2\nStep4       add my_encoding to leW side of binary string \nStep5       cur_number = round_down(cur_number/2)\nStep6   add cur_number to leW side of binary string  Question:  What is 11 in binary?  num_in = 11\n\nbinary_string= \n11%2 = 1\n\nbinary_string= 1 \n\n11/2 = 5.5 -  5\n5%2 = 1\n\nbinary_string= 11 \n\n5/2 = 2.5 -  2\n2%2 = 0\n\nbinary_string= 011 \n\n2/2 = 1\n\nbinary_string= 1011   Question:  What is 8 in binary?    num_in = 8 \n\nbinary_string= \n8%2 = 0\n\nbinary_string= 0 \n\n8/2 = 4\n4%2 = 0\n\nbinary_string= 00 \n\n4/2 = 2\n2%2 = 0\n\nbinary_string= 000 \n\n2/1 = 1\n\nbinary_string= 1000   NOTE:  Practice on your own.", 
            "title": "Encode Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-7-january-18th-2017", 
            "text": "Helper: Question 2 - Assignment 1    Input for this program is a list of numbers.   Pseudo code for addition.    a(m-1), a(m-2), a(1), a(0)     4  3  7      a(m-1)  a(m-2)  a(0)     Answer: m=3     3  2  9      b(2)  b(1)  b(0)     437+329=766", 
            "title": "Lecture 7 - January 18th, 2017"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#draw-a-flow-chart", 
            "text": "Use draw.io  Export as an image  Hand in PDF", 
            "title": "Draw a flow chart"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#binary-numbers", 
            "text": "10110 = 22\n01001 = 9  Tip:  If it ends with a 1 it is odd. If it ends in a 0 it is even.  8 -  01000\n5 -  00101", 
            "title": "Binary Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#algorithm-decimal-number-binary", 
            "text": "Ex. Binary Conversion  binary_string= \n\n23%2 = 1\n\nbinary_string=1\n\n23/2 = 11.5 -  11\n11%2 = 1\n\nbinary_string=11\n\n11/2 = 5.5   5\n5%2=1\n\nbinary_string=111\n\n5/2=2.5 -  2\n2%2=0\n\nbinary_string=0111\n\n2/2 = 1\n\nbinary_string=10111  Note:  If a question ask for 5 bit number, you must include 5 places.", 
            "title": "Algorithm Decimal Number - Binary."
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#adding-binary-numbers", 
            "text": "Ex. 00111+00001=01000       1  1  1        0  0  1  1  1    +          0  0  0  0  1    =          0  1  0  0  0     Bonus: 00111+00111=01110       1  1  1        0  0  1  1  1    +          0  0  1  1  1    =          0  1  1  1  0", 
            "title": "Adding Binary Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#encoding-negative-numbers", 
            "text": "Encode the positive number  Flip all the bits (1- 0 and 0- 1)  Add 1 to the new bit string   Question:  Convert -9 into binary  01001\n10110\n10111  Question:  Convert 12 into binary  01100\n10011\n10100", 
            "title": "Encoding Negative Numbers"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#twos-complement-number", 
            "text": "NOTE:  Unsigned Binary Number or a Two's Complement Number.   Ignore overflow that carries in Two's compliment", 
            "title": "Two's complement number"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#convert-twos-complement-into-decimal", 
            "text": "If negative:   Flip a bit and add one  Put the negative back at the end    If positive:   Normal Conversion", 
            "title": "Convert Two's complement into decimal"
        }, 
        {
            "location": "/A)-Lecture/4-Number-Systems/#lecture-8-january-20th-2017", 
            "text": "Notes Missing  Contribute your notes  here !", 
            "title": "Lecture 8 - January 20th, 2017"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/", 
            "text": "Guest 1\n\n\nLecture 9 - January 24th, 2017\n\n\nGuest Lecture\n\n\nBy George Tzanetakis (Associate Professor) - Music and Computer Science\n\n\nThe Northways\n\n\nNorthway Games\n\n\nHuman Computer Interaction\n\n\n\n\nLack of shared understanding\n\n\nCommunication Bottleneck:\n\n\nInput: Mouse/Keyboard (touch screen)\n\n\nOutput: Rectangle 2D screen, speakers\n\n\n\n\n\n\n\n\nWhy Music\n\n\n\n\nThe way music is \ncreated\n, \ndistrubuted\n, and \nperceived\n had been and will be transformed by advances in technology.\n\n\nArguably the most complex and expressive interaction with artifacts.\n\n\n\n\nDigital Music Data\n\n\n\n\n2000: ~1000 tracks\n\n\n2010: ~13 million tracks\n\n\n\n\nStatisticaly Supervised Learning\n\n\nPlaying/Improvising music with a computer\n\n\n\n\nMachine Orchestra Kapur - Jan. 2010\n\n\n\n\n\n\nEnd of Material for Midterm 1", 
            "title": "5 Guest1"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#guest-1", 
            "text": "", 
            "title": "Guest 1"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#lecture-9-january-24th-2017", 
            "text": "", 
            "title": "Lecture 9 - January 24th, 2017"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#guest-lecture", 
            "text": "By George Tzanetakis (Associate Professor) - Music and Computer Science  The Northways  Northway Games", 
            "title": "Guest Lecture"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#human-computer-interaction", 
            "text": "Lack of shared understanding  Communication Bottleneck:  Input: Mouse/Keyboard (touch screen)  Output: Rectangle 2D screen, speakers", 
            "title": "Human Computer Interaction"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#why-music", 
            "text": "The way music is  created ,  distrubuted , and  perceived  had been and will be transformed by advances in technology.  Arguably the most complex and expressive interaction with artifacts.", 
            "title": "Why Music"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#digital-music-data", 
            "text": "2000: ~1000 tracks  2010: ~13 million tracks", 
            "title": "Digital Music Data"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#statisticaly-supervised-learning", 
            "text": "", 
            "title": "Statisticaly Supervised Learning"
        }, 
        {
            "location": "/A)-Lecture/5-Guest1/#playingimprovising-music-with-a-computer", 
            "text": "Machine Orchestra Kapur - Jan. 2010    End of Material for Midterm 1", 
            "title": "Playing/Improvising music with a computer"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/", 
            "text": "Logic\n\n\nLecture 10 - January 25th, 2017\n\n\nLogic\n\n\n\n\nLogic gates\n\n\nForm basis of computer hardware and computer operations\n\n\nOR\n Truth Table (+)\n\n\nAND\n Truth Table (*)\n\n\nCombine : \nOR\n and \nAND\n\n\n\n\n\n\n\n\nNot\n (~)\n\n\n\n\n\n\nCircuit Diagrams\n\n\n\n\nCompare for Equality\n\n\n\n\nAdding with Logic - Full Adder Circuit\n\n\n\n\nTruth Table -\n Set of \nOR\n, \nAND\n, and \nNOT\n\n\nXOR\n Truth Table (Circle +)\n\n\n\n\nTest your understanding\n\n\n(X and Y) or Z\n\n\n2nd slide -\n E)\n\n\nSorting\n\n\n\n\nOften useful to have data sorted \n\n\nfind values more quickly\n\n\ntest for existence more quickly\n\n\n\n\n\n\nMany algorithms for sorting\n\n\n\n\nArrays\n\n\n\n\nArrays are like a list\n\n\nStart numbering positions at 0\n\n\nSquare brackets []\n\n\nAssign a value to an array\n\n\n\n\nNote:\n Left side changes\n\n\n\n\nSelection Sort\n\n\nSort hand of cards ?\n\n\nNumerically\n\n\n\n\nEx.\n  [2,8,6,3]\n\n\n\n\nUnsorted part of the list and sorted part of the list.\n\n\nInput integer array my_nums\n\n\n\n\nKeep track of sorted array section \nSearch through unsorted array for max val\nSwap max val with element at the rightmmost position of unsorted section\nMove sorted section one element to left\nStop when unsorted section has size 1\n\n\n\n\nLecture 11 - January 27th, 2017\n\n\nSelection Sort\n\n\n\n\nFind the the largest card, and put it to the rightmost position\n\n\nFin the next largest card, put it in the next-to-rightmost position\n\n\nEtc. \n\n\n\n\ninput integers c(\nsub\n0\n/sub\n) ... c(\nsub\nm-1\n/sub\n). m (array)(length)\n\ncur_ind = m-1\nwhile cur_ind \n 0\n    cur_max = -\\infty\n    i = 0\n    max_ind = 0\n    while i \n= cur_ind\n        if c(i) \n cur_max\n            cur_max = c(i)\n            max_ind = i\n        i = i + 1\n    swap c(cur_ind) \n c(max_ind)\n    cur_ind = cur_ind -1\n\n\n\n\nEx.\n Tace through c = [2,1,5,3,4]\n\n\nm=5\ncur_ind = 4\ncur_max = -\\infty\ni=0\nmax_ind = 0\n\ncur_max = 2\ni = 1 \n\ni = 2\n\ncur_max = 5\nmax_ind = 2\ni = 3\n\ni = 4\n\ncur_ind = 4\ni = 5\n\ncur_ind = 3\n\ncur_max = -\\infty\ni = 0\nmax_ind = 0\n\ncur_max = 2\ncur_ind = 0\ni = 1\n\ni = 2\n\nect.\n\n\n\n\nBubble Sort\n\n\n\n\nStart at the begining of the array \n\n\nConsider the first two numbers (position 0\n1)\n\n\nIf they are out of order, swap them\n\n\n\n\n\n\nConsider the next two numbers (position 1\n2)\n\n\nIf they are out of order, swap them\n\n\n\n\n\n\nContinue comparing consecutive numbers and swapping until you reach the end of the array\n\n\nStart over at the begining of the array \n\n\nContinue until you make it through the whole array wthout doing any swaps\n\n\n\n\ninput integers c(\nsub\n0\n/sub\n) ... c(\nsub\nm-1\n/sub\n), m (array)(length)\n\nswapped = True\nwhile swapped is True\n    swapped = False\n    i = 1\n    while 1 \n= m-1\n        if c(i-1) \n c(i)\n            swap c(i-1) \n c(i)\n            swapped = true\n        i = i + 1\n\n\n\n\nPractice\n\n\nConverting Pseudocode to Flowcharts \nImportant", 
            "title": "6 Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#logic", 
            "text": "", 
            "title": "Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#lecture-10-january-25th-2017", 
            "text": "", 
            "title": "Lecture 10 - January 25th, 2017"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#logic_1", 
            "text": "Logic gates  Form basis of computer hardware and computer operations  OR  Truth Table (+)  AND  Truth Table (*)  Combine :  OR  and  AND     Not  (~)", 
            "title": "Logic"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#circuit-diagrams", 
            "text": "Compare for Equality", 
            "title": "Circuit Diagrams"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#adding-with-logic-full-adder-circuit", 
            "text": "Truth Table -  Set of  OR ,  AND , and  NOT  XOR  Truth Table (Circle +)", 
            "title": "Adding with Logic - Full Adder Circuit"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#test-your-understanding", 
            "text": "(X and Y) or Z  2nd slide -  E)", 
            "title": "Test your understanding"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#sorting", 
            "text": "Often useful to have data sorted   find values more quickly  test for existence more quickly    Many algorithms for sorting", 
            "title": "Sorting"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#arrays", 
            "text": "Arrays are like a list  Start numbering positions at 0  Square brackets []  Assign a value to an array   Note:  Left side changes   Selection Sort  Sort hand of cards ?  Numerically   Ex.   [2,8,6,3]   Unsorted part of the list and sorted part of the list.  Input integer array my_nums   Keep track of sorted array section \nSearch through unsorted array for max val\nSwap max val with element at the rightmmost position of unsorted section\nMove sorted section one element to left\nStop when unsorted section has size 1", 
            "title": "Arrays"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#lecture-11-january-27th-2017", 
            "text": "", 
            "title": "Lecture 11 - January 27th, 2017"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#selection-sort", 
            "text": "Find the the largest card, and put it to the rightmost position  Fin the next largest card, put it in the next-to-rightmost position  Etc.    input integers c( sub 0 /sub ) ... c( sub m-1 /sub ). m (array)(length)\n\ncur_ind = m-1\nwhile cur_ind   0\n    cur_max = -\\infty\n    i = 0\n    max_ind = 0\n    while i  = cur_ind\n        if c(i)   cur_max\n            cur_max = c(i)\n            max_ind = i\n        i = i + 1\n    swap c(cur_ind)   c(max_ind)\n    cur_ind = cur_ind -1  Ex.  Tace through c = [2,1,5,3,4]  m=5\ncur_ind = 4\ncur_max = -\\infty\ni=0\nmax_ind = 0\n\ncur_max = 2\ni = 1 \n\ni = 2\n\ncur_max = 5\nmax_ind = 2\ni = 3\n\ni = 4\n\ncur_ind = 4\ni = 5\n\ncur_ind = 3\n\ncur_max = -\\infty\ni = 0\nmax_ind = 0\n\ncur_max = 2\ncur_ind = 0\ni = 1\n\ni = 2\n\nect.", 
            "title": "Selection Sort"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#bubble-sort", 
            "text": "Start at the begining of the array   Consider the first two numbers (position 0 1)  If they are out of order, swap them    Consider the next two numbers (position 1 2)  If they are out of order, swap them    Continue comparing consecutive numbers and swapping until you reach the end of the array  Start over at the begining of the array   Continue until you make it through the whole array wthout doing any swaps   input integers c( sub 0 /sub ) ... c( sub m-1 /sub ), m (array)(length)\n\nswapped = True\nwhile swapped is True\n    swapped = False\n    i = 1\n    while 1  = m-1\n        if c(i-1)   c(i)\n            swap c(i-1)   c(i)\n            swapped = true\n        i = i + 1", 
            "title": "Bubble Sort"
        }, 
        {
            "location": "/A)-Lecture/6-Logic/#practice", 
            "text": "Converting Pseudocode to Flowcharts  Important", 
            "title": "Practice"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/", 
            "text": "Lecture 12 - February 1st, 2017\n\n\nGuest lecture 2\n\n\nSendWithUs\n\n\n\n\nAutomated E-mail\n\n\nRealtime API \n\n\nSend Transactional Emails\n\n\nStarted in 2013, Matt and Brad\n\n\nYCombinator Startup Accelerator\n\n\n$2.5M -\n US Investors\n\n\nTeam of 17 People\n\n\nSales and Marketing in San Fran, California\n\n\nEngineering and Product Development in Victoria, BC\n\n\n\n\n\n\n\n\nAPI Example:\n\n\ncurl -X POST -u key_123 https://api.sendwithus.com/api/v1/send\n    -d '{\n    \nemail_id\n: \ntem_12345\n,\n    }'\n\n\n\n\nTemplate:\n\n\ntd\n\n    Welcome to Awesome Co, {{first_name}}!\n\n/td\n\n\n\n\n\nRendered Template:\n\n\n\n\nTechincal Overview:\n\n\n\n\nOver 10M emails per day \n\n\n= 600 instances (on Heroku)\n\n\nPython, Coffeescript, Golang, CSS, HTML\n\n\nPostgreSQL, MongoDB, Redis\n\n\n\n\nBackstory\n\n\n\n\nBrandon: VIU (Remax, Startup -\n websites/products -\n SendWithUs)\n\n\nJohn: UVIC (5Years -\n Math (Failed) -\n C's get degrees -\n Co-Ops -\n Startups vs Big Company -\n Real Job -\n Interview -\n SendWithUs (Backend Dev))\n\n\n\n\nWhat Makes Programming Awesome?\n\n\n\n\nFoundational Learning\n\n\nUniversity Co-Op\n\n\nComputer Science \n\n\nSelf-taught\n\n\nUvic\n\n\nBootcamps \n\n\n\n\n\n\n\n\n\n\nSide Projects\n\n\nGithub\n\n\nSimple - Complex\n\n\nAre the new Resume \n\n\n\n\n\n\nOpen Source\n\n\nOpen your code to the world\n\n\nCollaborate \n\n\n\n\n\n\nCommunity Involvement\n\n\nVictoria Tech Sector is Exploding\n\n\nStartUpSlam and Battlesnake\n\n\nVictoria Start Up Job Board\n\n\nLadies Learning Code", 
            "title": "7 Guest2"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/#lecture-12-february-1st-2017", 
            "text": "Guest lecture 2", 
            "title": "Lecture 12 - February 1st, 2017"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/#sendwithus", 
            "text": "Automated E-mail  Realtime API   Send Transactional Emails  Started in 2013, Matt and Brad  YCombinator Startup Accelerator  $2.5M -  US Investors  Team of 17 People  Sales and Marketing in San Fran, California  Engineering and Product Development in Victoria, BC     API Example:  curl -X POST -u key_123 https://api.sendwithus.com/api/v1/send\n    -d '{\n     email_id :  tem_12345 ,\n    }'  Template:  td \n    Welcome to Awesome Co, {{first_name}}! /td   Rendered Template:", 
            "title": "SendWithUs"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/#techincal-overview", 
            "text": "Over 10M emails per day   = 600 instances (on Heroku)  Python, Coffeescript, Golang, CSS, HTML  PostgreSQL, MongoDB, Redis", 
            "title": "Techincal Overview:"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/#backstory", 
            "text": "Brandon: VIU (Remax, Startup -  websites/products -  SendWithUs)  John: UVIC (5Years -  Math (Failed) -  C's get degrees -  Co-Ops -  Startups vs Big Company -  Real Job -  Interview -  SendWithUs (Backend Dev))", 
            "title": "Backstory"
        }, 
        {
            "location": "/A)-Lecture/7-Guest2/#what-makes-programming-awesome", 
            "text": "Foundational Learning  University Co-Op  Computer Science   Self-taught  Uvic  Bootcamps       Side Projects  Github  Simple - Complex  Are the new Resume     Open Source  Open your code to the world  Collaborate     Community Involvement  Victoria Tech Sector is Exploding  StartUpSlam and Battlesnake  Victoria Start Up Job Board  Ladies Learning Code", 
            "title": "What Makes Programming Awesome?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/", 
            "text": "Lecture 13 - February 3rd, 2017\n\n\nSoftware Development and Software Engineering\n\n\nWhy does it matter?\n\n\n\n\nSoftware is being integrated into everythnig we own\n\n\ncoffee makers\n\n\nrefrigerators\n\n\ncars\n\n\nairplanes \n\n\n\n\n\n\n\n\nThe high cost of software bugs\n\n\n\n\n\n\n\"The cost to fix an error found a#er product release was four to five Gmes as much as one uncovered during design, and up to 100 Gmes more than one idenGfied in the maintenance phase.\"\n\n\n\n\nIf a bug is found in the requirements-gathering phase, the cost could be $100.\n\n\nIf the product owner doesn't\n\n\n\n\n\n\n\n\nA 2003 study commisioned by the Department of Commerce's National Institure of Standards and Technology found that software bugs cost the US economy $59.5 billion annually. \n\n\n\n\nAND that was almost 15 years ago!\n\n\n\n\n\n\n\n\nSoftware Bugs\n\n\n\n\nNASA Mars Polar Lander\n\n\nSpacecrart Mars Climate Orbiter\n\n\nNASA Mariner 1\n\n\nFORTRAN Software\n\n\nTherac-25\n\n\nKnight Capital Group\n\n\nBank of Queensland\n\n\n\n\nWhat is software?\n\n\n\n\nSource Code, Executables and Documentation\n\n\nIt's invisible/intagible\n\n\nConceptual Complexity\n\n\n\"Softness\"\n\n\n\n\nDesired qualities of software?\n\n\n\n\nCorrectness\n\n\nReliability\n\n\nSafety\n\n\nUsability\n\n\nEfficiency\n\n\nInteroperability\n\n\nMaintainability\n\n\nPortability\n\n\nCustomizability\n\n\nExtensibility\n\n\nReusability\n\n\nOthers?\n\n\n\n\nWhat is software engineering?\n\n\n\n\nSoftware Engineering is...\n\n\nDiscipline that applies theories, methods, and tools to solve problems related to software production and maintance\n\n\nSoftware engineers strive to deliver high- quality software that satisfies users\u2019 needs, on time and within budget\n\n\n\n\n\n\n\n\nWhy is software engineering an important discipline?\n\n\nWhat are some of the main challenges in developing software?\n\n\nLaws of evolution...\n\n\n\n\nSoftware that remains useful over time, will\n\n\ncontinually \nchange\n...\n\n\nbecome more \ncomplex\n\n\nincrease in \nsize\n\n\ndecrease in \nquality\n\n\n\n\n\n\n\n\nFree Puppy = Free Software\n\n\nHistory of Software Engineering\n\n\n\n\nTerm coined in 1968 due to \nThe Software Crisis!\n\n\n\"The major cause of the software crisis is that the machines have become several orders of magnitude more powerful! To put it quite bluntly: as long as there were no machines, programming was no problem at all; when we had a few weak computers, programming became a mild problem, and now we have gigantic computers, programming has become an equally gigantic problem.\u201d Edsger Dijkstra, 1972\n\n\n\n\n\n\nStill debated a bit what the term \"software engineering\" means!\n\n\n\n\nNo Silver Bullet\n\n\n\n\n\n\n\"there is no single development, in either technology or management technique, which by itself promises even one order of magnitude [tenfold] improvement within a decade in productivity, in reliability, in simplicity.\u201c Fred Brooks, 1986\n\n\n\n\n\n\nDifference between \nessential complexity\n\n\n\n\n\n\nFred Books\n\n\n\n\nBrook's Law: \"\nadding manpower to a late software project makes it later.\n\"\n\n\nWatch for the \"\nsecond system effect.\n\"\n\n\nThe tendency towards irreductible number of \nerrors\n\n\nQuestion: \n\n\nHow does a large sofware project get to be one year late?\n\n\nOne day at a time!\n\n\n\n\n\n\nAlways design a system to \nthrow away\n\n\n\"good\" programmer\n are generally five to ten times as productive as mediocre ones.\n\n\n\n\nSoftware process (1)\n\n\n\n\nA software process is a set of activities are:\n\n\nSpecifications:\n\n\nDefines what the software should do, and its operational constraints\n\n\n\n\n\n\nDesign and Implementation:\n\n\nDesigns the solutions, and produces the source code to meet the specification \n\n\n\n\n\n\nValidation:\n\n\nChecks that the software produced is what the customer wants\n\n\n\n\n\n\nEvolution: \n\n\nChanges made to the software that meet user's changing needs\n\n\n\n\n\n\n\n\n\n\n\n\nMore fin grained steps\n\n\nWhy follow a given process?\n\n\n\n\nRepeatability\n\n\nManageability\n\n\n\n\nMeasurability\n\n\n\n\n\n\nInterim work products \n\n\n\n\nActivities are less likely to be forgotten\n\n\n\n\nWhat kind of process...\n\n\n \n\n\n\n\n\n\nAgile development and extreme programming\n\n\n\n\nApproach to software development that is: humanistic and lightweight\n\n\nRelies heavily on feedback and communication\n\n\n\n\nCharacteristics:\n\n\n\n\nPair programming\n\n\nTest-first design\n\n\nRefactoring\n\n\nContinous integration\n\n\nCollective ownership\n\n\nCoding standards\n\n\n40 hour week\n\n\nCustomer on team\n\n\n\n\nContinuous Integration\n\n\n\n\nEvery progremmas has their own version of the code, which they work on on their own computer.\n\n\nChanges are synchronized with a version control program like git\n\n\n\n\nProgrammers integrate code changes often, even several times a day\n\n\n\n\n\n\nCommunication is facilitated through:\n\n\n\n\nsource code\n\n\ntest cases\n\n\nsystem structure\n\n\nuse case scenarios\n\n\ntask estimation\n\n\n\n\n\n\n\n\nPair Programming:\n\n\n\n\nTwo programmers work together at one computer\n\n\nDriver\n\n\nstrategize over direction \n\n\nthink of improvements\n\n\nsee likely future problems to address\n\n\nbigger picture\n\n\n\n\n\n\nObserver/Navigator\n\n\nactually wrtires the code\n\n\nmore details oriented\n\n\n\n\n\n\nSwitch roles often to prevent fatigue, leep interest\n\n\nMore man power BUT less code defects\n\n\nGreat learning experience\n\n\nBetter for complex task\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Testing:\n\n\n\n\nEvery line of code is tested (in practice, impossible)\n\n\nTest -\n while coding, before coding\n\n\n\n\n\n\n\n\nEthics...\n\n\n\n\nACM/IEEE Software Engineering Code of Ethics and Professional Practice\n\n\nEight Priniciples\n\n\n\n\n\n\n\n\nEthical Dilemmas?\n\n\n\n\nYour employers acts unethical\n\n\nYou participate in the development of military weapons or nuclear systems\n\n\nProduce Malware\n\n\nOthers?\n\n\n\n\nOpen Source:\n\n\n\n\nSort of like a bazaar (Production Code like a cathedral)\n\n\n\n\nThings to think about:\n\n\n\n\nHow is software engineering different from other kinds of engineering (e.g. civil, mechanical, electrical etc)?\n\n\nHow is software engineering different from computer science? \n\n\n\n\nSummary\n\n\n\n\nSoftware engineering is an exciting field!\n\n\nCombines elements of engineering, computer science, social sciences, business, management....\n\n\nCan be interdisciplinary\n\n\nIs an important profession! Software engineers are in high demand!", 
            "title": "8 Software Dev & Software Eng"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#lecture-13-february-3rd-2017", 
            "text": "", 
            "title": "Lecture 13 - February 3rd, 2017"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#software-development-and-software-engineering", 
            "text": "", 
            "title": "Software Development and Software Engineering"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#why-does-it-matter", 
            "text": "Software is being integrated into everythnig we own  coffee makers  refrigerators  cars  airplanes", 
            "title": "Why does it matter?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#the-high-cost-of-software-bugs", 
            "text": "\"The cost to fix an error found a#er product release was four to five Gmes as much as one uncovered during design, and up to 100 Gmes more than one idenGfied in the maintenance phase.\"   If a bug is found in the requirements-gathering phase, the cost could be $100.  If the product owner doesn't     A 2003 study commisioned by the Department of Commerce's National Institure of Standards and Technology found that software bugs cost the US economy $59.5 billion annually.    AND that was almost 15 years ago!", 
            "title": "The high cost of software bugs"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#software-bugs", 
            "text": "NASA Mars Polar Lander  Spacecrart Mars Climate Orbiter  NASA Mariner 1  FORTRAN Software  Therac-25  Knight Capital Group  Bank of Queensland", 
            "title": "Software Bugs"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#what-is-software", 
            "text": "Source Code, Executables and Documentation  It's invisible/intagible  Conceptual Complexity  \"Softness\"", 
            "title": "What is software?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#desired-qualities-of-software", 
            "text": "Correctness  Reliability  Safety  Usability  Efficiency  Interoperability  Maintainability  Portability  Customizability  Extensibility  Reusability  Others?", 
            "title": "Desired qualities of software?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#what-is-software-engineering", 
            "text": "Software Engineering is...  Discipline that applies theories, methods, and tools to solve problems related to software production and maintance  Software engineers strive to deliver high- quality software that satisfies users\u2019 needs, on time and within budget     Why is software engineering an important discipline?  What are some of the main challenges in developing software?", 
            "title": "What is software engineering?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#laws-of-evolution", 
            "text": "Software that remains useful over time, will  continually  change ...  become more  complex  increase in  size  decrease in  quality     Free Puppy = Free Software", 
            "title": "Laws of evolution..."
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#history-of-software-engineering", 
            "text": "Term coined in 1968 due to  The Software Crisis!  \"The major cause of the software crisis is that the machines have become several orders of magnitude more powerful! To put it quite bluntly: as long as there were no machines, programming was no problem at all; when we had a few weak computers, programming became a mild problem, and now we have gigantic computers, programming has become an equally gigantic problem.\u201d Edsger Dijkstra, 1972    Still debated a bit what the term \"software engineering\" means!", 
            "title": "History of Software Engineering"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#no-silver-bullet", 
            "text": "\"there is no single development, in either technology or management technique, which by itself promises even one order of magnitude [tenfold] improvement within a decade in productivity, in reliability, in simplicity.\u201c Fred Brooks, 1986    Difference between  essential complexity", 
            "title": "No Silver Bullet"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#fred-books", 
            "text": "Brook's Law: \" adding manpower to a late software project makes it later. \"  Watch for the \" second system effect. \"  The tendency towards irreductible number of  errors  Question:   How does a large sofware project get to be one year late?  One day at a time!    Always design a system to  throw away  \"good\" programmer  are generally five to ten times as productive as mediocre ones.", 
            "title": "Fred Books"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#software-process-1", 
            "text": "A software process is a set of activities are:  Specifications:  Defines what the software should do, and its operational constraints    Design and Implementation:  Designs the solutions, and produces the source code to meet the specification     Validation:  Checks that the software produced is what the customer wants    Evolution:   Changes made to the software that meet user's changing needs       More fin grained steps", 
            "title": "Software process (1)"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#why-follow-a-given-process", 
            "text": "Repeatability  Manageability   Measurability    Interim work products    Activities are less likely to be forgotten", 
            "title": "Why follow a given process?"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#what-kind-of-process", 
            "text": "", 
            "title": "What kind of process..."
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#agile-development-and-extreme-programming", 
            "text": "Approach to software development that is: humanistic and lightweight  Relies heavily on feedback and communication   Characteristics:   Pair programming  Test-first design  Refactoring  Continous integration  Collective ownership  Coding standards  40 hour week  Customer on team", 
            "title": "Agile development and extreme programming"
        }, 
        {
            "location": "/A)-Lecture/8-Software-Dev-&-Software-Eng/#continuous-integration", 
            "text": "Every progremmas has their own version of the code, which they work on on their own computer.  Changes are synchronized with a version control program like git   Programmers integrate code changes often, even several times a day    Communication is facilitated through:   source code  test cases  system structure  use case scenarios  task estimation     Pair Programming:   Two programmers work together at one computer  Driver  strategize over direction   think of improvements  see likely future problems to address  bigger picture    Observer/Navigator  actually wrtires the code  more details oriented    Switch roles often to prevent fatigue, leep interest  More man power BUT less code defects  Great learning experience  Better for complex task       Software Testing:   Every line of code is tested (in practice, impossible)  Test -  while coding, before coding     Ethics...   ACM/IEEE Software Engineering Code of Ethics and Professional Practice  Eight Priniciples     Ethical Dilemmas?   Your employers acts unethical  You participate in the development of military weapons or nuclear systems  Produce Malware  Others?   Open Source:   Sort of like a bazaar (Production Code like a cathedral)   Things to think about:   How is software engineering different from other kinds of engineering (e.g. civil, mechanical, electrical etc)?  How is software engineering different from computer science?    Summary   Software engineering is an exciting field!  Combines elements of engineering, computer science, social sciences, business, management....  Can be interdisciplinary  Is an important profession! Software engineers are in high demand!", 
            "title": "Continuous Integration"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/", 
            "text": "Lecture 14 - February 7th, 2017\n\n\nGuest Lecture 3\n\n\nWhat is HCI\n\n\nAn introduction to human computer interaction (SENG 310) - David Johnson\n\n\nVitural Reality - Human interaction\n\n\n\n\nThe study of the interactions between people and computer interfaces\n\n\nThe process of designing and buildig software that is \nusable\n, \nuseful\n, and \nenjoyable\n\n\n\n\n\n\nWhy should we study HCI?\n\n\nWhat is an interface?\n\n\n\n\nA boundary where two systems / subjects / things meet to exchange information\n\n\n\n\nInterface Examples:\n\n\n\n\nGoogle Search\n\n\nApple Watch\n\n\nAmazon Echo\n\n\n\n\nBad Interfaces:\n\n\n\n\nLock -\n (Door Signage)\n\n\nKnobs and Burner\n\n\n\n\nPrinciples of Good Design\n\n\n\n\nRobin Williams Book\n\n\n\n\n2 Important Aspects of Good Design:\n\n\n\n\nDiscoverability\n\n\nUnderstanding\n\n\n\n\nNorman's Deisgn Principles\n\n\n\n\nVisibility\n\n\nAffordances \n Signifiers\n\n\nEx. Faucets, Doors \n\n\n\n\n\n\nConstraints\n\n\nReduce Errors \n\n\n\n\n\n\nMappings\n\n\nEx. Burner \n\n\n\n\n\n\nFeedback\n\n\nSatisfaction \n\n\n\n\n\n\nConsistency\n\n\n\n\nNorman Doors\n\n\n\n\nConsequences of Bad Design\n\n\n\n\nDecrease adoption\n\n\nDecrease productibity\n\n\nDecrease employee morale\n\n\nData loss\n\n\n\n\nGoals of Good Design\n\n\n\n\nUsability\n\n\nUser Experience\n\n\n\n\nUsability Goals:\n\n\n\n\nEffectiveness\n\n\nEfficient\n\n\nSafety\n\n\nUtility\n\n\nLearnability\n\n\nMemorability\n\n\nNote\n These do not measure how well the user actually enjoys the experience...\n\n\n\n\nUser Experience Goals:\n\n\n\n\nSatisfaction\n\n\nFun\n\n\nHelpful\n\n\nMotivating\n\n\nRewarding\n\n\nA e s t h e t i c s\n\n\n\n\nInteraction Deisgn\n\n\n\n\nRequirements Gathering\n\n\nDon't listen to users\n\n\nWhat they do, versus what they said\n\n\nGain empathy for the user\n\n\nQuestions (Users, Goals, ect.) \n\n\n\n\n\n\nConceptual Design\n\n\nModel\n\n\nPurpose statement, objects, operations, attribute, relationship  \n\n\n\n\n\n\nPersonas\n\n\nExample \n\n\n\n\n\n\nScenarios \n Use Cases\n\n\n\n\n\n\nConcrete Design\n\n\nPrototyping\n\n\nInteractive Deisgn\n\n\nFidelity of prototypes (Low - Paper, High - Sketch / InVision) \n\n\n\n\n\n\nEvaluation\n\n\nDoes it work?\n\n\nWhy, Who, When\n\n\nCognitive Walkthrough\n\n\n5 Steps of Usibility\n\n\n5 Users Min / Max - Interating  \n\n\n\n\n\n\n\n\n\n\nRepeat... \n\n\n\n\nThe user is drunk\n\n\nLink to Video", 
            "title": "9 Guest3"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#lecture-14-february-7th-2017", 
            "text": "", 
            "title": "Lecture 14 - February 7th, 2017"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#guest-lecture-3", 
            "text": "", 
            "title": "Guest Lecture 3"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#what-is-hci", 
            "text": "An introduction to human computer interaction (SENG 310) - David Johnson  Vitural Reality - Human interaction   The study of the interactions between people and computer interfaces  The process of designing and buildig software that is  usable ,  useful , and  enjoyable", 
            "title": "What is HCI"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#why-should-we-study-hci", 
            "text": "", 
            "title": "Why should we study HCI?"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#what-is-an-interface", 
            "text": "A boundary where two systems / subjects / things meet to exchange information   Interface Examples:   Google Search  Apple Watch  Amazon Echo   Bad Interfaces:   Lock -  (Door Signage)  Knobs and Burner", 
            "title": "What is an interface?"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#principles-of-good-design", 
            "text": "Robin Williams Book   2 Important Aspects of Good Design:   Discoverability  Understanding   Norman's Deisgn Principles   Visibility  Affordances   Signifiers  Ex. Faucets, Doors     Constraints  Reduce Errors     Mappings  Ex. Burner     Feedback  Satisfaction     Consistency   Norman Doors", 
            "title": "Principles of Good Design"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#consequences-of-bad-design", 
            "text": "Decrease adoption  Decrease productibity  Decrease employee morale  Data loss", 
            "title": "Consequences of Bad Design"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#goals-of-good-design", 
            "text": "Usability  User Experience   Usability Goals:   Effectiveness  Efficient  Safety  Utility  Learnability  Memorability  Note  These do not measure how well the user actually enjoys the experience...   User Experience Goals:   Satisfaction  Fun  Helpful  Motivating  Rewarding  A e s t h e t i c s", 
            "title": "Goals of Good Design"
        }, 
        {
            "location": "/A)-Lecture/9-Guest3/#interaction-deisgn", 
            "text": "Requirements Gathering  Don't listen to users  What they do, versus what they said  Gain empathy for the user  Questions (Users, Goals, ect.)     Conceptual Design  Model  Purpose statement, objects, operations, attribute, relationship      Personas  Example     Scenarios   Use Cases    Concrete Design  Prototyping  Interactive Deisgn  Fidelity of prototypes (Low - Paper, High - Sketch / InVision)     Evaluation  Does it work?  Why, Who, When  Cognitive Walkthrough  5 Steps of Usibility  5 Users Min / Max - Interating        Repeat...    The user is drunk  Link to Video", 
            "title": "Interaction Deisgn"
        }, 
        {
            "location": "/B)-Lab/Lab/", 
            "text": "Databases\n\n\nLab 1 - January 10th, 2017\n\n\nSqLite\n\n\nHow we access data is we use these things called queries. \n\n\nIn the terminal type in:\n\n\nsqlite3\n\nand then\n\n.read FILENAME.sql\n\nand then\n\nselect * from characters;\n\n\n\n\nOrder matters when running \nselect\n in the terminal from the database. It is not case sensitive.\n\n\nEx.\n You can use FROM, ChaRacters, Select, ect. \n\n\nselect dinstinct\n Applies only to what follows, and makes it so only unique data gets return. \n\n\nsql\n select distinct title from characters;\n \n\n\nNotes:\n You can have an or in your where.\n\n\n select * from characters where title = 'Horton Hears a Who' or title = 'Horton Hatches the Egg';\n\n\n\n\nEx.\n You can order your return. \n\n\nsql\n select name, year from characters order by year, title;\n\n\nAggregate function\n\n\n\n\ncount\n\n\nmax\n\n\nmin\n\n\navg\n\n\n\n\nLab 2 - January 17th, 2017\n\n\nFlowcharts\n\n\n\n\nRounded Rectangle -\n Start and Stop\n\n\nRectangle -\n Process\n\n\nDiamond -\n Decision\n\n\nYes or No\n\n\n\n\n\n\nItalic Rectangle -\n Data Input or Output\n\n\n\n\nCommunicate an algorithm\n\n\n\n\nEasy \n\n\nVisual\n\n\nSimple for hard problems\n\n\n\n\nCriteria for lab assignment\n\n\n\n\nFlowchart: \n\n\nDraw by hand \nor\n \n\n\nDraw with https://draw.io\n\n\n\n\n\n\n\n\nYou should know how to:\n\n\n\n\nConvert Pseudocode to Flowchart and Flowchart to Pseudocode\n\n\n\n\nLab Exercise:\n Draw a flowchart for playing 1 turn of \"computer pictionary\"\n\n\n\n\n2 teams (Team A and B)\n\n\nOnly using names of movies\n\n\nComputer draws movie name (if it can)\n\n\n5 guesses\n\n\n\n\nN.B. Team A draws a name -\n Team A inputs name into computer -\n Team B guesses (Max. 5 times)\n\n\nMy Solution:\n\n\n\n\nGroup Solution:\n\n\n\n\nPseudoCode Exercise:\n Get the name and title of books where there is a 1 and the year in lesser than 1960\n\n\nTable 1: Characters\n\n\n\n\n\n\n\n\nname\n\n\ntitle\n\n\nyear\n\n\nhuman\n\n\n\n\n\n\n\n\n\n\nexample\n\n\nexample\n\n\n1983\n\n\n1\n\n\n\n\n\n\nexample2\n\n\nexample2\n\n\n1924\n\n\n0\n\n\n\n\n\n\nexample3\n\n\nexample3\n\n\n1999\n\n\n1\n\n\n\n\n\n\n\n\nAnswer:  \nSelect name, title from characters where human=1 and year\n1960\n\n\nLab 3 - January 24th, 2017\n\n\nHex to Binary To Decimal\n\n\n\n\n\n\n\n\nDec\n\n\nHex\n\n\nBinary\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0000\n\n\n\n\n\n\n1\n\n\n1\n\n\n0001\n\n\n\n\n\n\n2\n\n\n2\n\n\n0010\n\n\n\n\n\n\n3\n\n\n3\n\n\n0011\n\n\n\n\n\n\n4\n\n\n4\n\n\n0100\n\n\n\n\n\n\n10\n\n\nA\n\n\n1010\n\n\n\n\n\n\n11\n\n\nB\n\n\n1011\n\n\n\n\n\n\n12\n\n\nC\n\n\n1100\n\n\n\n\n\n\n13\n\n\nD\n\n\n1101\n\n\n\n\n\n\n14\n\n\nE\n\n\n1110\n\n\n\n\n\n\n15\n\n\nF\n\n\n1111\n\n\n\n\n\n\n\n\nBinary to Hex\n\n\n\n\n\n\n\n\n0010\n\n\n1101\n\n\n1111\n\n\n\n\n\n\n\n\n\n\n2\n\n\nD\n\n\nF\n\n\n\n\n\n\n\n\nHex to Dec\n\n\n\n\n\n\n\n\n2\n\n\nD\n\n\nF\n\n\n\n\n\n\n\n\n\n\n16(2)\n\n\n16(1)\n\n\n16(0)\n\n\n\n\n\n\n\n\n= Big Number\n\n\n2's compliment\n\n\nNote:\n Number of bits need to be even\n\n\nEx:\n Positive number in 2's complement\n\n\n+28 = 28 in binary\n\n\nLab 4 - January 31st, 2017\n\n\n\n\nOR (+)\n\n\n\nAnd (*)\n\n  \n\n\nXOR (circleX)\n\n\nNot (~)\n\n\n\n\n\nTruth Tables -\n Circuit Diagram \n\n\nA) Draw a diagram of an OR gate using only AND and NOT gates. \n\n\nB) Draw a circuit diagram for an AND gate using only OR and NOT gates.\n\n\nThe \"OR and ANDS\" Rule\n\n\nOR, AND, NOT gates\n\n\n\n\n\n\n\n\nA\n\n\nB\n\n\nC\n\n\n\n\n\n\n\n\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n\n\n\n\nLook at only to inputs with 1 output. \n\n\nA is 0 -\n Not gate\n\n\nB is 1 -\n Nothing\n\n\nan AND those two\n\n\nA is 1 -\n Nothing\n\n\nB is 1 -\n Nothing\n\n\nand AND those two\n\n\nput both those paths to an OR gate\n\n\n\n\n\n\nNote:\n Doing AND for two inputs and then AND that input with a third input is the same as AND for three inputs. \n\n\nLab 5 - February 7th, 2017\n\n\nSorting\n\n\nSelection Sort vs. Bubble Sort\n\n\nSelection Sort\n\n\nList of numbers [64, 25, 12, 22, 11]\n\n\nn=5\nmin position = \nposition of min\n\nmin = \nmin for index i\n\ni = \nindex for next sorted number\n\nj = \nindex to compare as next min\n\n\n1. Look at index 1\n2. Find the lowest number in the list and switch it with the first position.\n\n[11, 25, 12, 22, 64]\n\n1. Look at index 2\n2. Find the new min\n3. Is the number lower than that of index 2\n\n[11, 12, 25, 22, 64]\n\nect. \n\n[11, 12, 22, 25, 64]\n\n1. Look at the last two in the array\n\n\n\n\n\n\nBubble Sort\n\n\nList of numbers [5, 1, 4, 2, 8]\n\n\nn=5\ni = N\nj = \n\n\n\n\n\n\n\n\nWikipedia page on bubble sort", 
            "title": "Lab"
        }, 
        {
            "location": "/B)-Lab/Lab/#databases", 
            "text": "", 
            "title": "Databases"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-1-january-10th-2017", 
            "text": "", 
            "title": "Lab 1 - January 10th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#sqlite", 
            "text": "How we access data is we use these things called queries.   In the terminal type in:  sqlite3\n\nand then\n\n.read FILENAME.sql\n\nand then\n\nselect * from characters;  Order matters when running  select  in the terminal from the database. It is not case sensitive.  Ex.  You can use FROM, ChaRacters, Select, ect.   select dinstinct  Applies only to what follows, and makes it so only unique data gets return.   sql\n select distinct title from characters;    Notes:  You can have an or in your where.   select * from characters where title = 'Horton Hears a Who' or title = 'Horton Hatches the Egg';  Ex.  You can order your return.   sql\n select name, year from characters order by year, title;", 
            "title": "SqLite"
        }, 
        {
            "location": "/B)-Lab/Lab/#aggregate-function", 
            "text": "count  max  min  avg", 
            "title": "Aggregate function"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-2-january-17th-2017", 
            "text": "", 
            "title": "Lab 2 - January 17th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#flowcharts", 
            "text": "Rounded Rectangle -  Start and Stop  Rectangle -  Process  Diamond -  Decision  Yes or No    Italic Rectangle -  Data Input or Output", 
            "title": "Flowcharts"
        }, 
        {
            "location": "/B)-Lab/Lab/#communicate-an-algorithm", 
            "text": "Easy   Visual  Simple for hard problems", 
            "title": "Communicate an algorithm"
        }, 
        {
            "location": "/B)-Lab/Lab/#criteria-for-lab-assignment", 
            "text": "Flowchart:   Draw by hand  or    Draw with https://draw.io", 
            "title": "Criteria for lab assignment"
        }, 
        {
            "location": "/B)-Lab/Lab/#you-should-know-how-to", 
            "text": "Convert Pseudocode to Flowchart and Flowchart to Pseudocode   Lab Exercise:  Draw a flowchart for playing 1 turn of \"computer pictionary\"   2 teams (Team A and B)  Only using names of movies  Computer draws movie name (if it can)  5 guesses   N.B. Team A draws a name -  Team A inputs name into computer -  Team B guesses (Max. 5 times)  My Solution:   Group Solution:   PseudoCode Exercise:  Get the name and title of books where there is a 1 and the year in lesser than 1960  Table 1: Characters     name  title  year  human      example  example  1983  1    example2  example2  1924  0    example3  example3  1999  1     Answer:   Select name, title from characters where human=1 and year 1960", 
            "title": "You should know how to:"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-3-january-24th-2017", 
            "text": "", 
            "title": "Lab 3 - January 24th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#hex-to-binary-to-decimal", 
            "text": "Dec  Hex  Binary      0  0  0000    1  1  0001    2  2  0010    3  3  0011    4  4  0100    10  A  1010    11  B  1011    12  C  1100    13  D  1101    14  E  1110    15  F  1111", 
            "title": "Hex to Binary To Decimal"
        }, 
        {
            "location": "/B)-Lab/Lab/#binary-to-hex", 
            "text": "0010  1101  1111      2  D  F", 
            "title": "Binary to Hex"
        }, 
        {
            "location": "/B)-Lab/Lab/#hex-to-dec", 
            "text": "2  D  F      16(2)  16(1)  16(0)     = Big Number", 
            "title": "Hex to Dec"
        }, 
        {
            "location": "/B)-Lab/Lab/#2s-compliment", 
            "text": "Note:  Number of bits need to be even  Ex:  Positive number in 2's complement  +28 = 28 in binary", 
            "title": "2's compliment"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-4-january-31st-2017", 
            "text": "OR (+)  And (*)     XOR (circleX)  Not (~)   Truth Tables -  Circuit Diagram   A) Draw a diagram of an OR gate using only AND and NOT gates.   B) Draw a circuit diagram for an AND gate using only OR and NOT gates.", 
            "title": "Lab 4 - January 31st, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#the-or-and-ands-rule", 
            "text": "OR, AND, NOT gates     A  B  C      0  0  0    0  1  1    1  0  0    1  1  1      Look at only to inputs with 1 output.   A is 0 -  Not gate  B is 1 -  Nothing  an AND those two  A is 1 -  Nothing  B is 1 -  Nothing  and AND those two  put both those paths to an OR gate    Note:  Doing AND for two inputs and then AND that input with a third input is the same as AND for three inputs.", 
            "title": "The \"OR and ANDS\" Rule"
        }, 
        {
            "location": "/B)-Lab/Lab/#lab-5-february-7th-2017", 
            "text": "", 
            "title": "Lab 5 - February 7th, 2017"
        }, 
        {
            "location": "/B)-Lab/Lab/#sorting", 
            "text": "Selection Sort vs. Bubble Sort  Selection Sort  List of numbers [64, 25, 12, 22, 11]  n=5\nmin position =  position of min \nmin =  min for index i \ni =  index for next sorted number \nj =  index to compare as next min \n\n1. Look at index 1\n2. Find the lowest number in the list and switch it with the first position.\n\n[11, 25, 12, 22, 64]\n\n1. Look at index 2\n2. Find the new min\n3. Is the number lower than that of index 2\n\n[11, 12, 25, 22, 64]\n\nect. \n\n[11, 12, 22, 25, 64]\n\n1. Look at the last two in the array   Bubble Sort  List of numbers [5, 1, 4, 2, 8]  n=5\ni = N\nj =     Wikipedia page on bubble sort", 
            "title": "Sorting"
        }, 
        {
            "location": "/D)-Annex/Announcements/", 
            "text": "Announcements\n\n\nAnnouncement 1 - January 6th, 2017\n\n\n\n\nAlice Gibbons (aligibbo@uvic.ca) - Main lab instructor\n\n\n10$ Access Cards (Get one from the library to have access outside of lab hours.)\n\n\n\n\nAnnouncement 2 - January 24th, 2017\n\n\n\n\nLab attendance is now online in Connex.\n\n\n\n\nAnnouncement 3 - January 24th, 2017\n\n\n\n\nKnow your lab section for the midterms.\n\n\nMidterm:\n\n\n40 Multiple Choice\n\n\n1 Long Answer\n\n\n\n\n\n\n\n\nAnnouncement 4 - Januery 27th, 2017\n\n\nMidterm:\n\n\n\n\nEvaluate logical expression\n\n\nX and Y and ~Z\n\n\n\n\n\n\nsql\n\n\nSlide material is fair game\n\n\n\n\nAnnouncement 5 - February 8th, 2017\n\n\n\n\nHomework 2 - Due on Friday\n\n\nQuestion 1 - Logical Expression (ex. (A and B) or !A) \n\n\n\n\n\n\nHomework 3 - Open the 20th of February\n\n\n\n\nAnnouncement 6 - February 10th, 2017\n\n\n\n\nAssignment due today\n\n\nMidterm marks are up\n\n\nFlowchart Remark -\n Pencil (Don't leave TA's presence)\n\n\n\n\nMidterm 1 Performance:\n\n\n\n\n97% - Lab mark\n\n\n79% - MC\n\n\n54% - Flowchart\n\n\n73% - Average\n\n\n\n\nPrograming in Python:\n\n\n\n\nAfter reading break\n\n\nhead start\n\n\ncscircles.cemc.uwaterloo.ca\n\n\n\n\n\n\ninstall python\n\n\ndevelopers.google.com/edu/python/set-up", 
            "title": "Announcements"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcements", 
            "text": "", 
            "title": "Announcements"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-1-january-6th-2017", 
            "text": "Alice Gibbons (aligibbo@uvic.ca) - Main lab instructor  10$ Access Cards (Get one from the library to have access outside of lab hours.)", 
            "title": "Announcement 1 - January 6th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-2-january-24th-2017", 
            "text": "Lab attendance is now online in Connex.", 
            "title": "Announcement 2 - January 24th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-3-january-24th-2017", 
            "text": "Know your lab section for the midterms.  Midterm:  40 Multiple Choice  1 Long Answer", 
            "title": "Announcement 3 - January 24th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-4-januery-27th-2017", 
            "text": "Midterm:   Evaluate logical expression  X and Y and ~Z    sql  Slide material is fair game", 
            "title": "Announcement 4 - Januery 27th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-5-february-8th-2017", 
            "text": "Homework 2 - Due on Friday  Question 1 - Logical Expression (ex. (A and B) or !A)     Homework 3 - Open the 20th of February", 
            "title": "Announcement 5 - February 8th, 2017"
        }, 
        {
            "location": "/D)-Annex/Announcements/#announcement-6-february-10th-2017", 
            "text": "Assignment due today  Midterm marks are up  Flowchart Remark -  Pencil (Don't leave TA's presence)   Midterm 1 Performance:   97% - Lab mark  79% - MC  54% - Flowchart  73% - Average   Programing in Python:   After reading break  head start  cscircles.cemc.uwaterloo.ca    install python  developers.google.com/edu/python/set-up", 
            "title": "Announcement 6 - February 10th, 2017"
        }
    ]
}